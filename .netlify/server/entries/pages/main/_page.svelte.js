import { c as create_ssr_component, o as onDestroy, f as spread, h as escape_object, i as createEventDispatcher, e as escape, v as validate_component, d as add_attribute } from "../../../chunks/ssr.js";
import { c as checkIconState, g as generateIcon } from "../../../chunks/functions.js";
import * as go from "gojs";
import "papaparse";
const Icon = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  const state = {
    // Last icon name
    name: "",
    // Loading status
    loading: null,
    // Destroyed status
    destroyed: false
  };
  let mounted = false;
  let data;
  const onLoad = (icon) => {
    if (typeof $$props.onLoad === "function") {
      $$props.onLoad(icon);
    }
    const dispatch = createEventDispatcher();
    dispatch("load", { icon });
  };
  function loaded() {
  }
  onDestroy(() => {
    state.destroyed = true;
  });
  {
    {
      const iconData = checkIconState($$props.icon, state, mounted, loaded, onLoad);
      data = iconData ? generateIcon(iconData.data, $$props) : null;
      if (data && iconData.classes) {
        data.attributes["class"] = (typeof $$props["class"] === "string" ? $$props["class"] + " " : "") + iconData.classes.join(" ");
      }
    }
  }
  return `${data ? `${data.svg ? `<svg${spread([escape_object(data.attributes)], {})}><!-- HTML_TAG_START -->${data.body}<!-- HTML_TAG_END --></svg>` : `<span${spread([escape_object(data.attributes)], {})}></span>`}` : ``}`;
});
const css = {
  code: "div.svelte-m7otc3 svg{font-size:24px;line-height:1em}div.svelte-m7otc3 .big-icon{font-size:72px}",
  map: `{"version":3,"file":"+page.svelte","sources":["+page.svelte"],"sourcesContent":["<script lang=\\"js\\">\\r\\n\\t// @ts-nocheck\\r\\n\\timport Icon from '@iconify/svelte';\\r\\n\\timport * as go from 'gojs';\\r\\n\\timport { afterUpdate, onMount } from 'svelte';\\r\\n\\timport Papa from 'papaparse';\\r\\n\\timport { fileStore } from '$lib/stores/fileStore';\\r\\n\\timport default_scheme from '$lib/defaults/default_scheme.json';\\r\\n\\timport reverse_relations from '$lib/defaults/reverse_relations.json';\\r\\n\\r\\n\\t// drawers\\r\\n\\tlet nodeDrawer = false;\\r\\n\\tlet settingsDrawer = false;\\r\\n\\t$: if (nodeDrawer) editContact();\\r\\n\\r\\n\\tlet openNames = false;\\r\\n\\r\\n\\tconst cForm = {\\r\\n\\t\\tname: '',\\r\\n\\t\\tsurname: '',\\r\\n\\t\\tprefix: '',\\r\\n\\t\\tsuffix: '',\\r\\n\\t\\tnickname: '',\\r\\n\\t\\tBirthday: '',\\r\\n\\t\\tdied: '',\\r\\n\\t\\tposition: '',\\r\\n\\t\\tNotes: '',\\r\\n\\t\\tpic: ''\\r\\n\\t};\\r\\n\\r\\n\\tlet card_w = 200;\\r\\n\\r\\n\\tlet diagram;\\r\\n\\tlet FamCoTree;\\r\\n\\r\\n\\tlet nodeDataArray = [];\\r\\n\\tlet linkDataArray = [];\\r\\n\\tlet selectedFile;\\r\\n\\tlet selectedNodes = 0;\\r\\n\\tlet selectedNode;\\r\\n\\r\\n\\tlet qrCodeUrl;\\r\\n\\tlet fileLink;\\r\\n\\tlet loading = false;\\r\\n\\tlet dialogVar;\\r\\n\\tlet dialogValue = '';\\r\\n\\r\\n\\t// settings\\r\\n\\tlet darkMode = false;\\r\\n\\tlet diagramColor = '#A5A4F4'; //'#0000FF1A'; //'#A5A4F4'; //rgba(0,0,255,0.1)\\r\\n\\tlet diagramColorH = lightenColor('#A5A4F4', 20);\\r\\n\\tlet diagramColorV = lightenColor('#A5A4F4', 35);\\r\\n\\tlet diagramContactStyle;\\r\\n\\tlet diagramRelationStlye;\\r\\n\\tlet lockUID = true;\\r\\n\\tlet autoUpdateUID = true;\\r\\n\\tlet autoReverseRelation = true;\\r\\n\\r\\n\\tlet nodeCount = 0;\\r\\n\\tlet linkCount = 0;\\r\\n\\r\\n\\tonMount(() => {\\r\\n\\t\\t// layout: new go.GridLayout({ angle: 90, layerSpacing: 50, nodeSpacing: 200 })\\r\\n\\t\\tconst $ = go.GraphObject.make;\\r\\n\\t\\tdiagram = $(go.Diagram, FamCoTree, {\\r\\n\\t\\t\\t'undoManager.isEnabled': true\\r\\n\\t\\t});\\r\\n\\r\\n\\t\\tdiagram.toolManager.draggingTool.isGridSnapEnabled = true;\\r\\n\\t\\tdiagram.toolManager.linkingTool.isEnabled = true;\\r\\n\\t\\tdiagram.model.undoManager.isEnabled = true;\\r\\n\\t\\tdiagram.layout.isOngoing = false;\\r\\n\\t\\tdiagram.isReadOnly = false;\\r\\n\\t\\t//diagram.toolManager.textEditingTool.acceptText(go.TextEditingTool.LostFocus);\\r\\n\\r\\n\\t\\tdiagram.grid = new go.Panel('Grid', { gridCellSize: new go.Size(card_w, 100) }).add(\\r\\n\\t\\t\\tnew go.Shape('BarV', {\\r\\n\\t\\t\\t\\tname: 'BarV',\\r\\n\\t\\t\\t\\tfill: diagramColorV,\\r\\n\\t\\t\\t\\twidth: card_w,\\r\\n\\t\\t\\t\\tportId: '',\\r\\n\\t\\t\\t\\tcursor: 'pointer'\\r\\n\\t\\t\\t}),\\r\\n\\t\\t\\tnew go.Shape('BarH', { name: 'BarH', fill: diagramColorH, height: 50 })\\r\\n\\t\\t);\\r\\n\\r\\n\\t\\tdiagram.nodeTemplate = $(\\r\\n\\t\\t\\tgo.Node,\\r\\n\\t\\t\\t'Auto',\\r\\n\\t\\t\\t{\\r\\n\\t\\t\\t\\twidth: card_w,\\r\\n\\t\\t\\t\\theight: 50,\\r\\n\\t\\t\\t\\ttoolTip: go.GraphObject.build('ToolTip').add(\\r\\n\\t\\t\\t\\t\\tnew go.TextBlock({ margin: 4 }).bind('text', 'Notes')\\r\\n\\t\\t\\t\\t),\\r\\n\\t\\t\\t\\tdoubleClick: () => {\\r\\n\\t\\t\\t\\t\\tnodeDrawer = true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t},\\r\\n\\t\\t\\tnew go.Binding('location', 'loc', go.Point.parse).makeTwoWay(go.Point.stringify)\\r\\n\\t\\t)\\r\\n\\t\\t\\t//.bind('location', 'loc', go.Point.parse) // avoid; 12 hours wasted\\r\\n\\t\\t\\t.add(\\r\\n\\t\\t\\t\\tnew go.Shape('RoundedRectangle', {\\r\\n\\t\\t\\t\\t\\tfill: diagramColor,\\r\\n\\t\\t\\t\\t\\tportId: '',\\r\\n\\t\\t\\t\\t\\tfromLinkable: true,\\r\\n\\t\\t\\t\\t\\ttoLinkable: true\\r\\n\\t\\t\\t\\t}).bind('fill', 'color'),\\r\\n\\t\\t\\t\\tnew go.Panel('Table', { stretch: go.Stretch.Fill, margin: 0 })\\r\\n\\t\\t\\t\\t\\t.addColumnDefinition(0, {\\r\\n\\t\\t\\t\\t\\t\\tsizing: go.Sizing.None,\\r\\n\\t\\t\\t\\t\\t\\tbackground: 'white',\\r\\n\\t\\t\\t\\t\\t\\tcoversSeparators: true\\r\\n\\t\\t\\t\\t\\t})\\r\\n\\t\\t\\t\\t\\t.addColumnDefinition(1, { separatorStroke: 'black' })\\r\\n\\t\\t\\t\\t\\t.addRowDefinition(0, { sizing: go.Sizing.None })\\r\\n\\t\\t\\t\\t\\t.addRowDefinition(1, { separatorStroke: 'black' })\\r\\n\\t\\t\\t\\t\\t.add(\\r\\n\\t\\t\\t\\t\\t\\t$(\\r\\n\\t\\t\\t\\t\\t\\t\\tgo.Picture,\\r\\n\\t\\t\\t\\t\\t\\t\\t{\\r\\n\\t\\t\\t\\t\\t\\t\\t\\trow: 0,\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tcolumn: 0,\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tbackground: 'black',\\r\\n\\t\\t\\t\\t\\t\\t\\t\\trowSpan: 2,\\r\\n\\t\\t\\t\\t\\t\\t\\t\\twidth: 44,\\r\\n\\t\\t\\t\\t\\t\\t\\t\\theight: 44,\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tmargin: 0\\r\\n\\t\\t\\t\\t\\t\\t\\t},\\r\\n\\t\\t\\t\\t\\t\\t\\tnew go.Binding('source', 'pic').makeTwoWay()\\r\\n\\t\\t\\t\\t\\t\\t),\\r\\n\\t\\t\\t\\t\\t\\t$(\\r\\n\\t\\t\\t\\t\\t\\t\\tgo.TextBlock,\\r\\n\\t\\t\\t\\t\\t\\t\\t{\\r\\n\\t\\t\\t\\t\\t\\t\\t\\twidth: 150,\\r\\n\\t\\t\\t\\t\\t\\t\\t\\teditable: false,\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tfont: 'bold 11pt helvetica',\\r\\n\\t\\t\\t\\t\\t\\t\\t\\trow: 0,\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tcolumn: 1,\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tcolumnSpan: 3,\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tstretch: go.Stretch.Horizontal,\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tmargin: new go.Margin(1, 0, 0, 0), // Remove extra margin\\r\\n\\t\\t\\t\\t\\t\\t\\t\\ttextAlign: 'center',\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tverticalAlignment: go.Spot.Bottom,\\r\\n\\t\\t\\t\\t\\t\\t\\t\\twrap: go.TextBlock.WrapFit,\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tmaxSize: new go.Size(150, NaN),\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tisMultiline: true\\r\\n\\t\\t\\t\\t\\t\\t\\t},\\r\\n\\t\\t\\t\\t\\t\\t\\t//new go.Binding('text', 'name').makeTwoWay()\\r\\n\\t\\t\\t\\t\\t\\t\\tnew go.Binding('text', '', (data) => data.name + ' ' + data.surname).makeTwoWay(\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t(text, data) => {\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tconst [name, surname] = text.split(' ');\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tdata.name = name;\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tdata.surname = surname;\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\treturn data;\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\t)\\r\\n\\t\\t\\t\\t\\t\\t),\\r\\n\\t\\t\\t\\t\\t\\t$(\\r\\n\\t\\t\\t\\t\\t\\t\\tgo.TextBlock,\\r\\n\\t\\t\\t\\t\\t\\t\\t{\\r\\n\\t\\t\\t\\t\\t\\t\\t\\twidth: 50,\\r\\n\\t\\t\\t\\t\\t\\t\\t\\teditable: false,\\r\\n\\t\\t\\t\\t\\t\\t\\t\\trow: 1,\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tcolumn: 1,\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tfont: '9pt helvetica',\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tstretch: go.Stretch.Horizontal,\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tmargin: 0,\\r\\n\\t\\t\\t\\t\\t\\t\\t\\ttextAlign: 'right'\\r\\n\\t\\t\\t\\t\\t\\t\\t},\\r\\n\\t\\t\\t\\t\\t\\t\\tnew go.Binding('text', 'Birthday', (date) =>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tdate ? new Date(date).getFullYear() : ''\\r\\n\\t\\t\\t\\t\\t\\t\\t).makeTwoWay((year, data) => {\\r\\n\\t\\t\\t\\t\\t\\t\\t\\treturn data.Birthday\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t? (new Date(data.Birthday).setFullYear(year),\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tnew Date(data.Birthday).toISOString().split('T')[0])\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t: '';\\r\\n\\t\\t\\t\\t\\t\\t\\t})\\r\\n\\t\\t\\t\\t\\t\\t),\\r\\n\\t\\t\\t\\t\\t\\t$(go.TextBlock, {\\r\\n\\t\\t\\t\\t\\t\\t\\twidth: 50,\\r\\n\\t\\t\\t\\t\\t\\t\\ttext: '-',\\r\\n\\t\\t\\t\\t\\t\\t\\trow: 1,\\r\\n\\t\\t\\t\\t\\t\\t\\tcolumn: 2,\\r\\n\\t\\t\\t\\t\\t\\t\\tfont: '9pt helvetica',\\r\\n\\t\\t\\t\\t\\t\\t\\tstretch: go.Stretch.Horizontal,\\r\\n\\t\\t\\t\\t\\t\\t\\tmargin: 0,\\r\\n\\t\\t\\t\\t\\t\\t\\ttextAlign: 'center'\\r\\n\\t\\t\\t\\t\\t\\t}),\\r\\n\\t\\t\\t\\t\\t\\t$(\\r\\n\\t\\t\\t\\t\\t\\t\\tgo.TextBlock,\\r\\n\\t\\t\\t\\t\\t\\t\\t{\\r\\n\\t\\t\\t\\t\\t\\t\\t\\twidth: 50,\\r\\n\\t\\t\\t\\t\\t\\t\\t\\teditable: false,\\r\\n\\t\\t\\t\\t\\t\\t\\t\\trow: 1,\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tcolumn: 3,\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tfont: '9pt helvetica',\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tstretch: go.Stretch.Horizontal,\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tmargin: 0,\\r\\n\\t\\t\\t\\t\\t\\t\\t\\ttextAlign: 'left'\\r\\n\\t\\t\\t\\t\\t\\t\\t},\\r\\n\\t\\t\\t\\t\\t\\t\\t//new go.Binding('text', 'Birthday').makeTwoWay()\\r\\n\\t\\t\\t\\t\\t\\t\\tnew go.Binding('text', 'died', (date) =>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tdate ? new Date(date).getFullYear() : ''\\r\\n\\t\\t\\t\\t\\t\\t\\t).makeTwoWay((year, data) => {\\r\\n\\t\\t\\t\\t\\t\\t\\t\\treturn data.died\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t? (new Date(data.died).setFullYear(year),\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tnew Date(data.died).toISOString().split('T')[0])\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t: '';\\r\\n\\t\\t\\t\\t\\t\\t\\t})\\r\\n\\t\\t\\t\\t\\t\\t)\\r\\n\\t\\t\\t\\t\\t)\\r\\n\\t\\t\\t);\\r\\n\\r\\n\\t\\tdiagram.linkTemplate = new go.Link({\\r\\n\\t\\t\\trouting: go.Routing.AvoidsNodes,\\r\\n\\t\\t\\tcurve: go.Curve.Bezier,\\r\\n\\t\\t\\tcorner: 5,\\r\\n\\t\\t\\trelinkableFrom: true,\\r\\n\\t\\t\\trelinkableTo: true,\\r\\n\\t\\t\\tfromPortId: ''\\r\\n\\t\\t}).add(\\r\\n\\t\\t\\tnew go.Shape(),\\r\\n\\t\\t\\tnew go.Shape({ toArrow: 'Standard' }),\\r\\n\\t\\t\\tnew go.TextBlock('Relation', {\\r\\n\\t\\t\\t\\tsegmentOffset: new go.Point(0, -10),\\r\\n\\t\\t\\t\\tsegmentOrientation: go.Orientation.Upright,\\r\\n\\t\\t\\t\\teditable: true\\r\\n\\t\\t\\t}).bind(new go.Binding('text', 'text').makeTwoWay())\\r\\n\\t\\t);\\r\\n\\r\\n\\t\\tfunction diagramInfo(model) {\\r\\n\\t\\t\\treturn (\\r\\n\\t\\t\\t\\t'Tree:\\\\n' +\\r\\n\\t\\t\\t\\tmodel.nodeDataArray.length +\\r\\n\\t\\t\\t\\t' Contacts, ' +\\r\\n\\t\\t\\t\\tmodel.linkDataArray.length +\\r\\n\\t\\t\\t\\t' Relations'\\r\\n\\t\\t\\t);\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// provide a tooltip for the background of the Diagram, when not over any Part\\r\\n\\t\\tdiagram.toolTip = go.GraphObject.build('ToolTip').add(\\r\\n\\t\\t\\tnew go.TextBlock({ margin: 4 })\\r\\n\\t\\t\\t\\t// use a converter to display information about the diagram model\\r\\n\\t\\t\\t\\t.bind('text', '', diagramInfo)\\r\\n\\t\\t);\\r\\n\\r\\n\\t\\tdiagram.addDiagramListener('TextEdited', (e) => {\\r\\n\\t\\t\\tif (autoReverseRelation) {\\r\\n\\t\\t\\t\\tconst tb = e.subject;\\r\\n\\t\\t\\t\\tif (tb && tb.part instanceof go.Link) {\\r\\n\\t\\t\\t\\t\\tconst { from, to, text } = tb.part.data;\\r\\n\\t\\t\\t\\t\\tconst reverseText = reverse_relations[text.toLowerCase()];\\r\\n\\t\\t\\t\\t\\t!reverseText || diagram.model.linkDataArray.some((l) => l.from === to && l.to === from)\\r\\n\\t\\t\\t\\t\\t\\t? null\\r\\n\\t\\t\\t\\t\\t\\t: diagram.model.addLinkData({ from: to, to: from, text: reverseText });\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t});\\r\\n\\r\\n\\t\\tdiagram.addDiagramListener('ChangedSelection', (e) => {\\r\\n\\t\\t\\tselectedNode = diagram.selection.first();\\r\\n\\t\\t\\tselectedNodes = diagram.selection.count;\\r\\n\\t\\t});\\r\\n\\r\\n\\t\\tfileStore.subscribe((value) => {\\r\\n\\t\\t\\tselectedFile = value;\\r\\n\\t\\t});\\r\\n\\r\\n\\t\\tif (selectedFile === 1) {\\r\\n\\t\\t\\tconsole.log('mainScratch');\\r\\n\\t\\t\\tdiagram.model = new go.GraphLinksModel(\\r\\n\\t\\t\\t\\tdefault_scheme.nodeDataArray,\\r\\n\\t\\t\\t\\tdefault_scheme.linkDataArray\\r\\n\\t\\t\\t);\\r\\n\\t\\t} else if (selectedFile !== null) {\\r\\n\\t\\t\\tconsole.log('mainFile');\\r\\n\\t\\t\\tPapa.parse(selectedFile, {\\r\\n\\t\\t\\t\\theader: true,\\r\\n\\t\\t\\t\\tskipEmptyLines: true,\\r\\n\\t\\t\\t\\tcomplete: function (results) {\\r\\n\\t\\t\\t\\t\\t// Sort the data by year of birth\\r\\n\\t\\t\\t\\t\\tresults.data.sort((a, b) => {\\r\\n\\t\\t\\t\\t\\t\\tconst yearA = extractYear(a.Birthday); // Assuming Birthday is the correct field\\r\\n\\t\\t\\t\\t\\t\\tconst yearB = extractYear(b.Birthday);\\r\\n\\t\\t\\t\\t\\t\\treturn yearA - yearB; // Sort in ascending order\\r\\n\\t\\t\\t\\t\\t});\\r\\n\\r\\n\\t\\t\\t\\t\\tconsole.log('Sorted CSV data:', results.data); // Sorted CSV data\\r\\n\\t\\t\\t\\t\\timportCSV(results.data); // Pass the sorted data to createGoJSData\\r\\n\\t\\t\\t\\t\\tfileStore.set(null);\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t});\\r\\n\\t\\t} else {\\r\\n\\t\\t\\tconsole.log('mainContinue');\\r\\n\\t\\t\\tloadDiagramFromLocalStorage();\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tdiagram.addModelChangedListener((e) => {\\r\\n\\t\\t\\tif (e.isTransactionFinished) {\\r\\n\\t\\t\\t\\tconsole.log(JSON.parse(diagram.model.toJson())['nodeDataArray']);\\r\\n\\t\\t\\t\\tconst model = JSON.parse(diagram.model.toJson());\\r\\n\\t\\t\\t\\tnodeCount = diagram.model.nodeDataArray.length;\\r\\n\\t\\t\\t\\tlinkCount = diagram.model.linkDataArray.length;\\r\\n\\r\\n\\t\\t\\t\\tif (model['nodeDataArray'].length !== 0) {\\r\\n\\t\\t\\t\\t\\tconsole.log('not empty');\\r\\n\\t\\t\\t\\t\\tsaveDiagramToLocalStorage(); // Save model after each transaction (i.e., modification)\\r\\n\\t\\t\\t\\t\\tdiagram.requestUpdate();\\r\\n\\t\\t\\t\\t} else {\\r\\n\\t\\t\\t\\t\\tconsole.log('empty');\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t//saveDiagramToLocalStorage(); // Save model after each transaction (i.e., modification)\\r\\n\\t\\t\\t}\\r\\n\\t\\t});\\r\\n\\r\\n\\t\\t///console.log('>>>', nodeDataArray);\\r\\n\\t\\t//diagram.model = new go.GraphLinksModel(nodeDataArray, linkDataArray);\\r\\n\\t\\t//diagram.requestUpdate();\\r\\n\\t}); // onMount ------------------------------------------------------------------------------------\\r\\n\\r\\n\\tfunction saveContact() {\\r\\n\\t\\tdiagram.model.startTransaction('edit contact');\\r\\n\\t\\tselectedNode.data.name = cForm.name;\\r\\n\\t\\tselectedNode.data.surname = cForm.surname;\\r\\n\\r\\n\\t\\tselectedNode.data.Birthday = cForm.Birthday;\\r\\n\\t\\tselectedNode.data.died = cForm.died;\\r\\n\\t\\tselectedNode.data.Notes = cForm.Notes;\\r\\n\\r\\n\\t\\tupdateAllUids();\\r\\n\\t\\tselectedNode.data.key = cForm.key;\\r\\n\\r\\n\\t\\tdiagram.model.updateTargetBindings(selectedNode.data);\\r\\n\\t\\tdiagram.model.commitTransaction('edit contact');\\r\\n\\r\\n\\t\\tnodeDrawer = false;\\r\\n\\t}\\r\\n\\r\\n\\tfunction updateAllUids() {\\r\\n\\t\\tconst model = diagram.model;\\r\\n\\t\\tconst oldKey = selectedNode.data.key;\\r\\n\\t\\tconst newKey = cForm.key;\\r\\n\\t\\tconsole.log('old', oldKey);\\r\\n\\t\\tconsole.log('new', newKey);\\r\\n\\r\\n\\t\\tmodel.linkDataArray.forEach((linkData) => {\\r\\n\\t\\t\\tif (linkData.from === oldKey) {\\r\\n\\t\\t\\t\\tmodel.setDataProperty(linkData, 'from', newKey);\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tif (linkData.to === oldKey) {\\r\\n\\t\\t\\t\\tmodel.setDataProperty(linkData, 'to', newKey);\\r\\n\\t\\t\\t}\\r\\n\\t\\t});\\r\\n\\t}\\r\\n\\r\\n\\tconst saveDiagramToLocalStorage = () => {\\r\\n\\t\\t//diagram.rebuildParts();\\r\\n\\t\\tconst modelAsJson = diagram.model.toJson(); // Convert model to JSON string\\r\\n\\t\\tconsole.log('SaveDiagram', modelAsJson);\\r\\n\\t\\tlocalStorage.setItem('myDiagramModel', modelAsJson); // Save the model in localStorage\\r\\n\\t};\\r\\n\\r\\n\\t// Function to load the diagram model from localStorage on reload\\r\\n\\tconst loadDiagramFromLocalStorage = () => {\\r\\n\\t\\tconst savedModel = localStorage.getItem('myDiagramModel'); // Retrieve the model from localStorage\\r\\n\\r\\n\\t\\tif (savedModel) {\\r\\n\\t\\t\\tconsole.log('loadFromlocal YES');\\r\\n\\r\\n\\t\\t\\tdiagram.model = go.Model.fromJson(savedModel); // Load the saved model into the diagram\\r\\n\\t\\t} else {\\r\\n\\t\\t\\tconsole.log('loadFromlocal NO');\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\r\\n\\tfunction removeContact() {\\r\\n\\t\\tconsole.log('removeContact');\\r\\n\\t\\tdiagram.commandHandler.deleteSelection();\\r\\n\\t}\\r\\n\\r\\n\\tfunction addContact() {\\r\\n\\t\\tconsole.log('addContact', isFree(0, 0));\\r\\n\\r\\n\\t\\tdiagram.model.startTransaction('add contact');\\r\\n\\t\\tdiagram.model.addNodeData({\\r\\n\\t\\t\\tpic: 'https://famcotree.danielthecyberdude.com/Avatar.webp',\\r\\n\\t\\t\\tname: 'New',\\r\\n\\t\\t\\tsurname: 'Contact',\\r\\n\\t\\t\\tBirthday: '',\\r\\n\\t\\t\\tdied: '',\\r\\n\\t\\t\\tNotes: '',\\r\\n\\t\\t\\tkey: 'new_contact_' + generateRandomYear(),\\r\\n\\t\\t\\tloc: nextFreeLocH()\\r\\n\\t\\t});\\r\\n\\t\\tdiagram.model.commitTransaction('add contact');\\r\\n\\t}\\r\\n\\r\\n\\tfunction editContact() {\\r\\n\\t\\tconsole.log('Edit node (fillit)');\\r\\n\\t\\tconst data = diagram.selection.first().data;\\r\\n\\t\\tconsole.log(data.name, data.died);\\r\\n\\t\\tcForm.pic = data.pic;\\r\\n\\t\\tcForm.name = data.name;\\r\\n\\t\\tcForm.surname = data.surname;\\r\\n\\t\\tcForm.Birthday = data.Birthday;\\r\\n\\t\\tcForm.died = data.died;\\r\\n\\t\\tcForm.Notes = data.Notes;\\r\\n\\r\\n\\t\\tcForm.key = data.key;\\r\\n\\t\\tcForm.position = data.loc\\r\\n\\t\\t\\t.split(' ')\\r\\n\\t\\t\\t.map((v, i) => \`\${i === 0 ? 'X' : 'Y'}: \${v}\`)\\r\\n\\t\\t\\t.join('         ');\\r\\n\\t\\tconsole.log(data.loc.split(' '));\\r\\n\\t}\\r\\n\\r\\n\\tfunction editScheme() {\\r\\n\\t\\tdialogValue = diagram.model.toJson();\\r\\n\\t\\tdialogVar.showModal();\\r\\n\\t\\tconsole.log('editScheme');\\r\\n\\t}\\r\\n\\tfunction updateScheme() {\\r\\n\\t\\tconsole.log('updateScheme');\\r\\n\\t\\tdiagram.model = go.Model.fromJson(dialogValue);\\r\\n\\t\\tdialogVar.close();\\r\\n\\t}\\r\\n\\tfunction copyScheme() {\\r\\n\\t\\tconsole.log('copyToClipboardScheme');\\r\\n\\t\\tnavigator.clipboard.writeText(diagram.model.toJson());\\r\\n\\t}\\r\\n\\r\\n\\tfunction removeAllRelations() {\\r\\n\\t\\tconsole.log('removeAllContacts');\\r\\n\\t\\tdiagram.startTransaction('remove all relations');\\r\\n\\t\\tdiagram.model.linkDataArray = [];\\r\\n\\t\\tdiagram.commitTransaction('remove all relations');\\r\\n\\t\\tsaveDiagramToLocalStorage();\\r\\n\\t}\\r\\n\\r\\n\\tfunction removeAllContacts() {\\r\\n\\t\\tconsole.log('removeAllContacts');\\r\\n\\t\\tdiagram.startTransaction('remove all contacts');\\r\\n\\t\\tdiagram.model.nodeDataArray = [];\\r\\n\\t\\tdiagram.model.linkDataArray = [];\\r\\n\\t\\tdiagram.commitTransaction('remove all contacts');\\r\\n\\t\\tsaveDiagramToLocalStorage();\\r\\n\\t}\\r\\n\\r\\n\\tfunction lightenColor(hex, percent) {\\r\\n\\t\\t// Convert HEX to RGB\\r\\n\\t\\tlet r = parseInt(hex.slice(1, 3), 16);\\r\\n\\t\\tlet g = parseInt(hex.slice(3, 5), 16);\\r\\n\\t\\tlet b = parseInt(hex.slice(5, 7), 16);\\r\\n\\r\\n\\t\\t// Calculate the amount to lighten each color component\\r\\n\\t\\tr = Math.min(255, Math.floor(r + r * (percent / 100)));\\r\\n\\t\\tg = Math.min(255, Math.floor(g + g * (percent / 100)));\\r\\n\\t\\tb = Math.min(255, Math.floor(b + b * (percent / 100)));\\r\\n\\r\\n\\t\\t// Convert back to HEX\\r\\n\\t\\treturn \`#\${((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1)}\`;\\r\\n\\t}\\r\\n\\r\\n\\tconst updateDiagramColor = (event) => {\\r\\n\\t\\tdiagramColor = event.target.value; // Update the reactive variable\\r\\n\\r\\n\\t\\tdiagram.model.nodeDataArray.forEach((nodeData) => {\\r\\n\\t\\t\\tdiagram.model.setDataProperty(nodeData, 'color', diagramColor);\\r\\n\\t\\t});\\r\\n\\r\\n\\t\\tdiagram.grid.findObject('BarH').fill = lightenColor(diagramColor, 20);\\r\\n\\t\\tdiagram.grid.findObject('BarV').fill = lightenColor(diagramColor, 35);\\r\\n\\t};\\r\\n\\r\\n\\tfunction changeRelationStyle() {\\r\\n\\t\\tdiagram.startTransaction('change curve');\\r\\n\\t\\tdiagram.links.each((link) => {\\r\\n\\t\\t\\tlink.curve = diagramRelationStlye; // Directly use selected curve\\r\\n\\t\\t});\\r\\n\\t\\tdiagram.commitTransaction('change curve');\\r\\n\\t}\\r\\n\\r\\n\\tfunction isFree(x, y) {\\r\\n\\t\\tfor (var i = 0; i < diagram.model.nodeDataArray.length; i++) {\\r\\n\\t\\t\\tvar nodeData = diagram.model.nodeDataArray[i];\\r\\n\\t\\t\\tvar node = diagram.findNodeForData(nodeData);\\r\\n\\r\\n\\t\\t\\tif (node) {\\r\\n\\t\\t\\t\\t// Get the node's location\\r\\n\\t\\t\\t\\tvar loc = node.location;\\r\\n\\t\\t\\t\\t// Check if the node's location is the same as (x, y)\\r\\n\\t\\t\\t\\tconsole.log(loc.x, loc.y);\\r\\n\\t\\t\\t\\tif (loc.x === x && loc.y === y) {\\r\\n\\t\\t\\t\\t\\treturn false; // Location is occupied\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn true;\\r\\n\\t}\\r\\n\\r\\n\\tfunction printLoc() {\\r\\n\\t\\tvar selectedNode = diagram.selection.first(); // Get the first selected node\\r\\n\\t\\tconst nodeData = selectedNode.data;\\r\\n\\t\\t//diagram.model.startTransaction('edit');\\r\\n\\t\\t//diagram.model.setDataProperty(nodeData, 'name', 'danijel');\\r\\n\\t\\t//diagram.model.commitTransaction('edit');\\r\\n\\t\\tif (selectedNode !== null) {\\r\\n\\t\\t\\tvar location = selectedNode.location;\\r\\n\\t\\t\\tconsole.log(location);\\r\\n\\t\\t\\tconsole.log(selectedNode.name);\\r\\n\\t\\t\\tconsole.log(diagram.model.nodeDataArray);\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\t/* nodeDataArray = [\\r\\n\\t\\t\\t\\t{\\r\\n\\t\\t\\t\\t\\tkey: 'Dmitar_Petrović_1232',\\r\\n\\t\\t\\t\\t\\tBirthday: 1992,\\r\\n\\t\\t\\t\\t\\tdied: 2000,\\r\\n\\t\\t\\t\\t\\tname: 'Dmitar Petrović',\\r\\n\\t\\t\\t\\t\\tfrom: true,\\r\\n\\t\\t\\t\\t\\tto: true,\\r\\n\\t\\t\\t\\t\\tloc: '0 -100'\\r\\n\\t\\t\\t\\t},\\r\\n\\t\\t\\t\\t{\\r\\n\\t\\t\\t\\t\\tkey: 'Danica_Petrović_1111',\\r\\n\\t\\t\\t\\t\\tBirthday: 1992,\\r\\n\\t\\t\\t\\t\\tdied: 2000,\\r\\n\\t\\t\\t\\t\\tname: 'Danica Petrović',\\r\\n\\t\\t\\t\\t\\tfrom: true,\\r\\n\\t\\t\\t\\t\\tto: true,\\r\\n\\t\\t\\t\\t\\tloc: '400 -100'\\r\\n\\t\\t\\t\\t},\\r\\n\\t\\t\\t\\t{\\r\\n\\t\\t\\t\\t\\tkey: 'Milan_Petrović_1111',\\r\\n\\t\\t\\t\\t\\tBirthday: 1992,\\r\\n\\t\\t\\t\\t\\tdied: 2000,\\r\\n\\t\\t\\t\\t\\tname: 'Milan Petrović Đedoslav',\\r\\n\\t\\t\\t\\t\\tfrom: true,\\r\\n\\t\\t\\t\\t\\tto: true,\\r\\n\\t\\t\\t\\t\\tloc: '200 -200'\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t];\\r\\n\\t\\t\\tlinkDataArray = [\\r\\n\\t\\t\\t\\t{ from: 'Dmitar_Petrović_1232', to: 'Danica_Petrović_1111', text: 'Spouse' },\\r\\n\\t\\t\\t\\t{ from: 'Danica_Petrović_1111', to: 'Dmitar_Petrović_1232', text: 'Spouse' },\\r\\n\\t\\t\\t\\t{ from: 'Dmitar_Petrović_1232', to: 'Milan_Petrović_1111', text: 'Child' }\\r\\n\\t\\t\\t]; */\\r\\n\\r\\n\\tfunction findInContact(contact, key, getKey = false) {\\r\\n\\t\\tfor (const field in contact) {\\r\\n\\t\\t\\tif (field.includes('Label') && contact[field] === key) {\\r\\n\\t\\t\\t\\tconst valueField = field.replace('Label', 'Value');\\r\\n\\t\\t\\t\\treturn getKey ? valueField : contact[valueField];\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn null;\\r\\n\\t}\\r\\n\\r\\n\\tfunction importCSV(data) {\\r\\n\\t\\tnodeDataArray = data.map((contact) => {\\r\\n\\t\\t\\tlet key = findInContact(contact, 'UID');\\r\\n\\r\\n\\t\\t\\tlet newContact = Object.assign({}, contact, {\\r\\n\\t\\t\\t\\tpic: 'https://famcotree.danielthecyberdude.com/Avatar.webp',\\r\\n\\t\\t\\t\\tname: contact['First Name'],\\r\\n\\t\\t\\t\\tsurname: contact['Last Name'],\\r\\n\\t\\t\\t\\tdied: findInContact(contact, 'RIP'),\\r\\n\\t\\t\\t\\tkey: key || \`\${contact['First Name']}_\${contact['Last Name']}_\${generateRandomYear()}\`,\\r\\n\\t\\t\\t\\tloc: '0 0'\\r\\n\\t\\t\\t});\\r\\n\\r\\n\\t\\t\\tdelete newContact['First Name'];\\r\\n\\t\\t\\tdelete newContact['Last Name'];\\r\\n\\t\\t\\tconst uidKey = findInContact(contact, 'UID', true);\\r\\n\\t\\t\\tif (uidKey) {\\r\\n\\t\\t\\t\\tdelete newContact[uidKey];\\r\\n\\t\\t\\t\\tdelete newContact[uidKey.replace('Value', 'Label')];\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t// delete Relation x - Label and Relation x - Value,  where x is index\\r\\n\\r\\n\\t\\t\\tObject.keys(newContact).forEach((key) => {\\r\\n\\t\\t\\t\\tconst match = key.match(/^Relation (\\\\d+) - Label$/);\\r\\n\\t\\t\\t\\tif (match) {\\r\\n\\t\\t\\t\\t\\tconst index = match[1];\\r\\n\\t\\t\\t\\t\\tdelete newContact[\`Relation \${index} - Label\`];\\r\\n\\t\\t\\t\\t\\tdelete newContact[\`Relation \${index} - Value\`];\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t});\\r\\n\\r\\n\\t\\t\\tnewContact.Birthday = /^\\\\d{4}-\\\\d{2}-\\\\d{2}$/.test(newContact.Birthday)\\r\\n\\t\\t\\t\\t? newContact.Birthday\\r\\n\\t\\t\\t\\t: null;\\r\\n\\r\\n\\t\\t\\treturn newContact;\\r\\n\\t\\t});\\r\\n\\r\\n\\t\\tlinkDataArray = [];\\r\\n\\r\\n\\t\\tdata.forEach((contact) => {\\r\\n\\t\\t\\t// Find the UID from custom fields\\r\\n\\t\\t\\tlet from = findInContact(contact, 'UID');\\r\\n\\t\\t\\tconsole.log(from);\\r\\n\\r\\n\\t\\t\\tif (!from) return; // Skip if UID does not exist\\r\\n\\r\\n\\t\\t\\tObject.keys(contact).forEach((key) => {\\r\\n\\t\\t\\t\\tconst match = key.match(/^Relation (\\\\d+) - Label$/);\\r\\n\\t\\t\\t\\tif (match) {\\r\\n\\t\\t\\t\\t\\tconst index = match[1];\\r\\n\\t\\t\\t\\t\\tconst relationLabel = contact[\`Relation \${index} - Label\`];\\r\\n\\t\\t\\t\\t\\tconst relationValues = contact[\`Relation \${index} - Value\`];\\r\\n\\r\\n\\t\\t\\t\\t\\tif (relationLabel && relationValues) {\\r\\n\\t\\t\\t\\t\\t\\trelationValues.split(' ::: ').forEach((relationValue) => {\\r\\n\\t\\t\\t\\t\\t\\t\\tlinkDataArray.push({\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tfrom,\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tto: relationValue.trim(),\\r\\n\\t\\t\\t\\t\\t\\t\\t\\ttext: relationLabel.trim()\\r\\n\\t\\t\\t\\t\\t\\t\\t});\\r\\n\\t\\t\\t\\t\\t\\t});\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t});\\r\\n\\t\\t});\\r\\n\\r\\n\\t\\tconsole.log('nodeDataArray:', nodeDataArray);\\r\\n\\t\\tconsole.log('linkDataArray:', linkDataArray);\\r\\n\\t\\tdiagram.model = new go.GraphLinksModel(nodeDataArray, linkDataArray);\\r\\n\\t}\\r\\n\\r\\n\\tasync function shareQR() {\\r\\n\\t\\tconsole.log('shareQR');\\r\\n\\t\\tloading = true;\\r\\n\\r\\n\\t\\tconst svgStr = new XMLSerializer().serializeToString(\\r\\n\\t\\t\\tdiagram.makeSvg({ scale: 1, background: 'white' })\\r\\n\\t\\t);\\r\\n\\t\\tconst blob = new Blob([svgStr], { type: 'image/svg+xml' });\\r\\n\\t\\tconst formData = new FormData();\\r\\n\\t\\tformData.append('file', blob, 'diagram.svg');\\r\\n\\r\\n\\t\\ttry {\\r\\n\\t\\t\\tconst response = await fetch('https://file.io/?expires=1d', {\\r\\n\\t\\t\\t\\tmethod: 'POST',\\r\\n\\t\\t\\t\\tbody: formData\\r\\n\\t\\t\\t});\\r\\n\\r\\n\\t\\t\\tconst data = await response.json();\\r\\n\\t\\t\\tfileLink = data.link || ''; // Ensure fileLink is updated after upload\\r\\n\\t\\t\\tqrCodeUrl = \`https://api.qrserver.com/v1/create-qr-code/?size=150x150&data=\${encodeURIComponent(fileLink)}\`;\\r\\n\\t\\t} catch (error) {\\r\\n\\t\\t\\tconsole.error('Upload failed:', error);\\r\\n\\t\\t} finally {\\r\\n\\t\\t\\tloading = false;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\tfunction downloadPNG() {\\r\\n\\t\\tconst imageData = diagram.makeImageData({\\r\\n\\t\\t\\tbackground: 'white', // optional: set background color\\r\\n\\t\\t\\tscale: 1, // adjust the scaling factor (1 for 100%)\\r\\n\\t\\t\\tmaxSize: new go.Size(Infinity, Infinity) // adjust size if needed\\r\\n\\t\\t});\\r\\n\\t\\tconsole.log('downloadPNG');\\r\\n\\r\\n\\t\\t// Create a link element and trigger download\\r\\n\\t\\tconst link = document.createElement('a');\\r\\n\\t\\tlink.href = imageData;\\r\\n\\t\\tlink.download = 'diagram.png'; // the file name for download\\r\\n\\t\\tlink.click();\\r\\n\\t}\\r\\n\\r\\n\\tfunction downloadSVG() {\\r\\n\\t\\tconst svg = diagram.makeSvg({\\r\\n\\t\\t\\tscale: 1,\\r\\n\\t\\t\\tbackground: 'white'\\r\\n\\t\\t});\\r\\n\\r\\n\\t\\tconst serializer = new XMLSerializer();\\r\\n\\t\\tconst svgStr = serializer.serializeToString(svg);\\r\\n\\r\\n\\t\\tconst blob = new Blob([svgStr], { type: 'image/svg+xml' });\\r\\n\\t\\tconst url = URL.createObjectURL(blob);\\r\\n\\r\\n\\t\\tconst link = document.createElement('a');\\r\\n\\t\\tlink.href = url;\\r\\n\\t\\tlink.download = 'diagram.svg';\\r\\n\\t\\tlink.click();\\r\\n\\r\\n\\t\\tURL.revokeObjectURL(url); // clean up\\r\\n\\t}\\r\\n\\r\\n\\tfunction downloadCSV() {\\r\\n\\t\\tlet nodeDataArray = diagram.model.nodeDataArray;\\r\\n\\t\\tlet linkDataArray = diagram.model.linkDataArray;\\r\\n\\r\\n\\t\\tlet csvTxt = 'First Name,Middle Name,Last Name,';\\r\\n\\r\\n\\t\\tlet maxEmails = 0;\\r\\n\\t\\tlet maxPhones = 0;\\r\\n\\t\\tlet maxAddresses = 0;\\r\\n\\t\\tlet maxRelations = 0;\\r\\n\\t\\tlet maxCustomFields = 0;\\r\\n\\r\\n\\t\\tnodeDataArray.forEach((node) => {\\r\\n\\t\\t\\tconsole.log(node);\\r\\n\\r\\n\\t\\t\\t// Extract Emails for the current node, \\"E-mail 1 - Label,E-mail 1 - Value\\"\\r\\n\\t\\t\\tconst emails = Object.keys(node)\\r\\n\\t\\t\\t\\t.filter((key) => key.startsWith('E-mail') && key.endsWith('Value'))\\r\\n\\t\\t\\t\\t.map((key) => [node[key.replace('Value', 'Label')], node[key]]);\\r\\n\\t\\t\\tif (emails.length > maxEmails) {\\r\\n\\t\\t\\t\\tmaxEmails = emails.length;\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tconsole.log(emails);\\r\\n\\r\\n\\t\\t\\t// Extract Phones for the current node, \\"Phone 1 - Label,Phone 1 - Value\\"\\r\\n\\t\\t\\tconst phones = Object.keys(node)\\r\\n\\t\\t\\t\\t.filter((key) => key.startsWith('Phone') && key.endsWith('Value'))\\r\\n\\t\\t\\t\\t.map((key) => [node[key.replace('Value', 'Label')], node[key]]);\\r\\n\\t\\t\\tif (phones.length > maxPhones) {\\r\\n\\t\\t\\t\\tmaxPhones = phones.length;\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tconsole.log(phones);\\r\\n\\r\\n\\t\\t\\t// Extract Addresses for the current node, \\"Address 1 - Label,Address 1 - Formatted,Address 1 - Street,Address 1 - City,Address 1 - PO Box,Address 1 - Region,Address 1 - Postal Code,Address 1 - Country,Address 1 - Extended Address\\"\\r\\n\\t\\t\\tconst addresses = Object.keys(node)\\r\\n\\t\\t\\t\\t.filter((key) => key.startsWith('Address') && key.endsWith('Label'))\\r\\n\\t\\t\\t\\t.map((key) => {\\r\\n\\t\\t\\t\\t\\tconst baseKey = key.replace('Label', '');\\r\\n\\t\\t\\t\\t\\treturn [\\r\\n\\t\\t\\t\\t\\t\\tnode[\`\${baseKey}Label\`],\\r\\n\\t\\t\\t\\t\\t\\tnode[\`\${baseKey}Formatted\`],\\r\\n\\t\\t\\t\\t\\t\\tnode[\`\${baseKey}Street\`],\\r\\n\\t\\t\\t\\t\\t\\tnode[\`\${baseKey}City\`],\\r\\n\\t\\t\\t\\t\\t\\tnode[\`\${baseKey}PO Box\`],\\r\\n\\t\\t\\t\\t\\t\\tnode[\`\${baseKey}Region\`],\\r\\n\\t\\t\\t\\t\\t\\tnode[\`\${baseKey}Postal Code\`],\\r\\n\\t\\t\\t\\t\\t\\tnode[\`\${baseKey}Country\`],\\r\\n\\t\\t\\t\\t\\t\\tnode[\`\${baseKey}Extended Address\`]\\r\\n\\t\\t\\t\\t\\t];\\r\\n\\t\\t\\t\\t});\\r\\n\\t\\t\\tif (addresses.length > maxAddresses) {\\r\\n\\t\\t\\t\\tmaxAddresses = addresses.length;\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tconsole.log(addresses);\\r\\n\\r\\n\\t\\t\\t// Extract relations for the current node (only those where the node is \\"from\\")\\r\\n\\t\\t\\tconst relations = linkDataArray.filter((link) => link.from === node.key);\\r\\n\\t\\t\\tconsole.log(relations);\\r\\n\\r\\n\\t\\t\\tif (relations.length > maxRelations) {\\r\\n\\t\\t\\t\\tmaxRelations = relations.length;\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// Extract custom fields for the current node, \\"Custom Field 1 - Label,Custom Field 1 - Value\\"\\r\\n\\t\\t\\tlet customFields = [];\\r\\n\\t\\t\\tcustomFields.push(['UID', node.key]);\\r\\n\\t\\t\\tcustomFields.push(['LOC', node.loc]);\\r\\n\\t\\t\\tcustomFields = customFields.concat(\\r\\n\\t\\t\\t\\tObject.keys(node)\\r\\n\\t\\t\\t\\t\\t.filter((key) => key.startsWith('Custom Field') && key.endsWith('Value'))\\r\\n\\t\\t\\t\\t\\t.map((key) => [node[key.replace('Value', 'Label')], node[key]])\\r\\n\\t\\t\\t);\\r\\n\\t\\t\\tif (customFields.length > maxCustomFields) {\\r\\n\\t\\t\\t\\tmaxCustomFields = customFields.length;\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tconsole.log(customFields);\\r\\n\\t\\t});\\r\\n\\r\\n\\t\\t// mora najprije prebrojiti, pa onda ispuniti sta ima, pa onda popuniti sa praznim\\r\\n\\t\\tconsole.log(maxEmails, maxPhones, maxAddresses, maxRelations, maxCustomFields);\\r\\n\\r\\n\\t\\t// headers\\r\\n\\t\\tcsvTxt += Object.keys(nodeDataArray[0]).slice(1, 15).join(',') + ','; // till Labels\\r\\n\\t\\tfor (let i = 1; i <= maxEmails; i++) {\\r\\n\\t\\t\\tcsvTxt += \`E-mail \${i} - Label,E-mail \${i} - Value,\`;\\r\\n\\t\\t}\\r\\n\\t\\tfor (let i = 1; i <= maxPhones; i++) {\\r\\n\\t\\t\\tcsvTxt += \`Phone \${i} - Label,Phone \${i} - Value,\`;\\r\\n\\t\\t}\\r\\n\\t\\tfor (let i = 1; i <= maxAddresses; i++) {\\r\\n\\t\\t\\tcsvTxt += \`Address \${i} - Label,Address \${i} - Formatted,Address \${i} - Street,Address \${i} - City,Address \${i} - PO Box,Address \${i} - Region,Address \${i} - Postal Code,Address \${i} - Country,Address \${i} - Extended Address,\`;\\r\\n\\t\\t}\\r\\n\\t\\tfor (let i = 1; i <= maxRelations; i++) {\\r\\n\\t\\t\\tcsvTxt += \`Relation \${i} - Label,Relation \${i} - Value,\`;\\r\\n\\t\\t}\\r\\n\\t\\tfor (let i = 1; i <= maxCustomFields; i++) {\\r\\n\\t\\t\\tcsvTxt += \`Custom Field \${i} - Label,Custom Field \${i} - Value,\`;\\r\\n\\t\\t}\\r\\n\\t\\tcsvTxt = csvTxt.slice(0, -1) + '\\\\n';\\r\\n\\r\\n\\t\\t// data\\r\\n\\t\\tnodeDataArray.forEach((node) => {\\r\\n\\t\\t\\tcsvTxt += node.name + ',' + node['Middle Name'] + ',' + node.surname + ',';\\r\\n\\t\\t\\t// 15th column notes needs to be in quotes\\r\\n\\t\\t\\tlet values = Object.values(node).slice(1, 15);\\r\\n\\t\\t\\tvalues[11] = \`\\"\${values[11]}\\"\`;\\r\\n\\t\\t\\tvalues[13] = \`\\"\${values[13]}\\"\`;\\r\\n\\t\\t\\tcsvTxt += values.join(',') + ',';\\r\\n\\r\\n\\t\\t\\t//csvTxt += Object.values(node).slice(1, 15).join(',') + ',';\\r\\n\\r\\n\\t\\t\\t// E-mails with gaps\\r\\n\\t\\t\\tfor (let i = 1; i <= maxEmails; i++) {\\r\\n\\t\\t\\t\\tnode[\`E-mail \${i} - Label\`]\\r\\n\\t\\t\\t\\t\\t? (csvTxt += \`\${node[\`E-mail \${i} - Label\`]},\${node[\`E-mail \${i} - Value\`]},\`)\\r\\n\\t\\t\\t\\t\\t: (csvTxt += ',,');\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// Phones with gaps\\r\\n\\t\\t\\tfor (let i = 1; i <= maxPhones; i++) {\\r\\n\\t\\t\\t\\tnode[\`Phone \${i} - Label\`]\\r\\n\\t\\t\\t\\t\\t? (csvTxt += \`\${node[\`Phone \${i} - Label\`]},\${node[\`Phone \${i} - Value\`]},\`)\\r\\n\\t\\t\\t\\t\\t: (csvTxt += ',,');\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// Addresses with gaps\\r\\n\\t\\t\\tfor (let i = 1; i <= maxAddresses; i++) {\\r\\n\\t\\t\\t\\tnode[\`Address \${i} - Label\`]\\r\\n\\t\\t\\t\\t\\t? (csvTxt += \`\${node[\`Address \${i} - Label\`]},\\"\${node[\`Address \${i} - Formatted\`]}\\",\${node[\`Address \${i} - Street\`]},\${node[\`Address \${i} - City\`]},\${node[\`Address \${i} - PO Box\`]},\${node[\`Address \${i} - Region\`]},\${node[\`Address \${i} - Postal Code\`]},\${node[\`Address \${i} - Country\`]},\${node[\`Address \${i} - Extended Address\`]},\`)\\r\\n\\t\\t\\t\\t\\t: (csvTxt += ',,,,,,,,,,');\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// Relations with gaps\\r\\n\\t\\t\\tlinkDataArray\\r\\n\\t\\t\\t\\t.filter((link) => link.from === node.key)\\r\\n\\t\\t\\t\\t.forEach((link, index) => {\\r\\n\\t\\t\\t\\t\\tcsvTxt += \`\${link.text},\${link.to},\`;\\r\\n\\t\\t\\t\\t});\\r\\n\\r\\n\\t\\t\\t// Custom fields with gaps\\r\\n\\t\\t\\tcsvTxt += \`UID,\${node.key},LOC,\${node.loc},\`;\\r\\n\\t\\t\\tfor (let i = 3; i <= maxCustomFields; i++) {\\r\\n\\t\\t\\t\\tnode[\`Custom Field \${i} - Label\`]\\r\\n\\t\\t\\t\\t\\t? (csvTxt += \`\${node[\`Custom Field \${i} - Label\`]},\${node[\`Custom Field \${i} - Value\`]},\`)\\r\\n\\t\\t\\t\\t\\t: (csvTxt += ',,');\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tcsvTxt += '\\\\n\\\\n';\\r\\n\\t\\t\\t//csvTxt = csvTxt.slice(0, -1) + '\\\\n\\\\n';\\r\\n\\t\\t});\\r\\n\\r\\n\\t\\t/*\\r\\n\\t\\tnodeDataArray.forEach((node) => {\\r\\n\\t\\t\\tconst row = Object.values(node).slice(1).join(',');\\r\\n\\t\\t\\tcsvTxt += row + '\\\\n';\\r\\n\\t\\t});\\r\\n\\t\\t*/\\r\\n\\r\\n\\t\\t// download CSV\\r\\n\\t\\tconst blob = new Blob([csvTxt], { type: 'text/csv;charset=utf-8;' });\\r\\n\\t\\tconst link = document.createElement('a');\\r\\n\\t\\tconst url = URL.createObjectURL(blob);\\r\\n\\t\\tlink.setAttribute('href', url);\\r\\n\\t\\tlink.setAttribute('download', 'exported_contacts.csv');\\r\\n\\t\\tdocument.body.appendChild(link);\\r\\n\\t\\tlink.click();\\r\\n\\t\\tdocument.body.removeChild(link);\\r\\n\\t}\\r\\n\\r\\n\\tfunction downloadCSVold() {\\r\\n\\t\\tconst nodeDataArray = diagram.model.nodeDataArray;\\r\\n\\t\\tconst linkDataArray = diagram.model.linkDataArray;\\r\\n\\t\\tconsole.log('download');\\r\\n\\r\\n\\t\\tconst csvRows = [];\\r\\n\\t\\tlet headers = [\\r\\n\\t\\t\\t'First Name',\\r\\n\\t\\t\\t'Middle Name',\\r\\n\\t\\t\\t'Last Name',\\r\\n\\t\\t\\t'Phonetic First Name',\\r\\n\\t\\t\\t'Phonetic Middle Name',\\r\\n\\t\\t\\t'Phonetic Last Name',\\r\\n\\t\\t\\t'Name Prefix',\\r\\n\\t\\t\\t'Name Suffix',\\r\\n\\t\\t\\t'Nickname',\\r\\n\\t\\t\\t'File As',\\r\\n\\t\\t\\t'Organization Name',\\r\\n\\t\\t\\t'Organization Title',\\r\\n\\t\\t\\t'Organization Department',\\r\\n\\t\\t\\t'Birthday',\\r\\n\\t\\t\\t'Notes',\\r\\n\\t\\t\\t'Photo',\\r\\n\\t\\t\\t'Labels',\\r\\n\\t\\t\\t'Event 1 - Label',\\r\\n\\t\\t\\t'Event 1 - Value',\\r\\n\\t\\t\\t'Custom Field 1 - Label',\\r\\n\\t\\t\\t'Custom Field 1 - Value',\\r\\n\\t\\t\\t'loc' // Extra field for location\\r\\n\\t\\t];\\r\\n\\r\\n\\t\\t// Create a map to store relations for each node\\r\\n\\t\\tconst relationsMap = {};\\r\\n\\r\\n\\t\\t// Populate relations map based on links where the node is the \\"from\\" key\\r\\n\\t\\tlinkDataArray.forEach((link) => {\\r\\n\\t\\t\\tconst { from, text } = link;\\r\\n\\r\\n\\t\\t\\t// Initialize relations array for the \\"from\\" node if it doesn't exist\\r\\n\\t\\t\\tif (!relationsMap[from]) {\\r\\n\\t\\t\\t\\trelationsMap[from] = [];\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// Add the relation for the \\"from\\" node\\r\\n\\t\\t\\trelationsMap[from].push({ relation: text, relatedNode: link.to });\\r\\n\\t\\t});\\r\\n\\r\\n\\t\\t// Process node data and dynamically add headers for relations\\r\\n\\t\\tnodeDataArray.forEach((node) => {\\r\\n\\t\\t\\tconst { name, surname, key, loc, Notes, pic, Birthday, died } = node;\\r\\n\\r\\n\\t\\t\\t// Extract relations for the current node (only those where the node is \\"from\\")\\r\\n\\t\\t\\tconst relations = relationsMap[key] || [];\\r\\n\\r\\n\\t\\t\\t// Dynamically add relation headers if new relations are found\\r\\n\\t\\t\\trelations.forEach((_, index) => {\\r\\n\\t\\t\\t\\tif (!headers.includes(\`Relation \${index + 1} - Label\`)) {\\r\\n\\t\\t\\t\\t\\theaders.push(\`Relation \${index + 1} - Label\`);\\r\\n\\t\\t\\t\\t\\theaders.push(\`Relation \${index + 1} - Value\`);\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t});\\r\\n\\r\\n\\t\\t\\t// Prepare the row for CSV\\r\\n\\t\\t\\tconst row = [\\r\\n\\t\\t\\t\\tname, // First Name\\r\\n\\t\\t\\t\\t'', // Middle Name\\r\\n\\t\\t\\t\\tsurname, // Last Name\\r\\n\\t\\t\\t\\t'', // Phonetic First Name\\r\\n\\t\\t\\t\\t'', // Phonetic Middle Name\\r\\n\\t\\t\\t\\t'', // Phonetic Last Name\\r\\n\\t\\t\\t\\t'', // Name Prefix\\r\\n\\t\\t\\t\\t'', // Name Suffix\\r\\n\\t\\t\\t\\t'', // Nickname\\r\\n\\t\\t\\t\\t'', // File As\\r\\n\\t\\t\\t\\t'', // Organization Name\\r\\n\\t\\t\\t\\t'', // Organization Title\\r\\n\\t\\t\\t\\t'', // Organization Department\\r\\n\\t\\t\\t\\tBirthday || '', // Birthday\\r\\n\\t\\t\\t\\tNotes || '', // Notes\\r\\n\\t\\t\\t\\tpic || '', // Photo\\r\\n\\t\\t\\t\\t'' // Labels\\r\\n\\t\\t\\t];\\r\\n\\r\\n\\t\\t\\t// Add event (if applicable)\\r\\n\\t\\t\\tconst event = died ? ['RIP', died] : ['', ''];\\r\\n\\t\\t\\trow.push(...event);\\r\\n\\r\\n\\t\\t\\t// Add UID (Custom Field 1)\\r\\n\\t\\t\\trow.push('UID', key);\\r\\n\\r\\n\\t\\t\\t// Add loc field\\r\\n\\t\\t\\trow.push(loc);\\r\\n\\r\\n\\t\\t\\t// Add dynamic relations in 'Relation X - Label' and 'Relation X - Value' format\\r\\n\\t\\t\\trelations.forEach((relation) => {\\r\\n\\t\\t\\t\\trow.push(relation.relation, relation.relatedNode);\\r\\n\\t\\t\\t});\\r\\n\\r\\n\\t\\t\\tcsvRows.push(row.join(','));\\r\\n\\t\\t});\\r\\n\\r\\n\\t\\t// Add the dynamically generated headers to the CSV\\r\\n\\t\\tcsvRows.unshift(headers.join(','));\\r\\n\\r\\n\\t\\t// Create CSV string\\r\\n\\t\\tconst csvString = csvRows.join('\\\\n');\\r\\n\\r\\n\\t\\t// Trigger download\\r\\n\\t\\tconst blob = new Blob([csvString], { type: 'text/csv;charset=utf-8;' });\\r\\n\\t\\tconst link = document.createElement('a');\\r\\n\\t\\tconst url = URL.createObjectURL(blob);\\r\\n\\t\\tlink.setAttribute('href', url);\\r\\n\\t\\tlink.setAttribute('download', 'exported_contacts.csv');\\r\\n\\t\\tdocument.body.appendChild(link);\\r\\n\\t\\tlink.click();\\r\\n\\t\\tdocument.body.removeChild(link);\\r\\n\\t}\\r\\n\\r\\n\\tfunction extractYear(dateString) {\\r\\n\\t\\tif (dateString) {\\r\\n\\t\\t\\tconst year = dateString.split('-')[0]; // Extracts year if date is in format YYYY-MM-DD\\r\\n\\t\\t\\treturn parseInt(year, 10);\\r\\n\\t\\t}\\r\\n\\t\\treturn null;\\r\\n\\t}\\r\\n\\r\\n\\tfunction generateRandomYear() {\\r\\n\\t\\treturn Math.floor(1000 + Math.random() * 9000); // Always generates a 4-digit number\\r\\n\\t}\\r\\n\\r\\n\\tfunction nextRandomLoc() {\\r\\n\\t\\tlet x, y;\\r\\n\\t\\tdo {\\r\\n\\t\\t\\tx = Math.floor(Math.random() * 3) * 200; // Randomly choose from 0, 200, 400\\r\\n\\t\\t\\ty = (Math.floor(Math.random() * 6) - 2) * 100; // Randomly choose from -200, -100, 0, 100, 200\\r\\n\\t\\t} while (!isFree(x, y)); // Ensure the location is free\\r\\n\\r\\n\\t\\treturn \`\${x} \${y}\`;\\r\\n\\t}\\r\\n\\r\\n\\tfunction nextFreeLocH(startX = 0, startY = 0, direction = 'right') {\\r\\n\\t\\tif (direction === 'right') {\\r\\n\\t\\t\\twhile (!isFree(startX, startY)) {\\r\\n\\t\\t\\t\\tstartX += 400;\\r\\n\\t\\t\\t}\\r\\n\\t\\t} else if (direction === 'left') {\\r\\n\\t\\t\\twhile (!isFree(startX, startY)) {\\r\\n\\t\\t\\t\\tstartX -= 400;\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn \`\${startX} \${startY}\`;\\r\\n\\t}\\r\\n\\r\\n\\tfunction nextFreeLocV(startX = 0, startY = 0, direction = 'up') {\\r\\n\\t\\tif (direction === 'up') {\\r\\n\\t\\t\\twhile (!isFree(startX, startY)) {\\r\\n\\t\\t\\t\\tstartY -= 100;\\r\\n\\t\\t\\t}\\r\\n\\t\\t} else if (direction === 'down') {\\r\\n\\t\\t\\twhile (!isFree(startX, startY)) {\\r\\n\\t\\t\\t\\tstartY += 100;\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn \`\${startX} \${startY}\`;\\r\\n\\t}\\r\\n\\r\\n\\tfunction populateNodeDrawer() {\\r\\n\\t\\tsidebarData = ['Item 1', 'Item 2', 'Item 3']; // Example data\\r\\n\\t\\tconsole.log('Sidebar opened and populated with data!');\\r\\n\\t}\\r\\n\\r\\n\\tfunction fixdUID() {\\r\\n\\t\\tif (autoUpdateUID) {\\r\\n\\t\\t\\tconsole.log(cForm.key);\\r\\n\\t\\t\\tcForm.key =\\r\\n\\t\\t\\t\\tcForm.name +\\r\\n\\t\\t\\t\\t'_' +\\r\\n\\t\\t\\t\\tcForm.surname +\\r\\n\\t\\t\\t\\t'_' +\\r\\n\\t\\t\\t\\t(cForm.Birthday !== '' ? new Date(cForm.Birthday).getFullYear() : generateRandomYear());\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\tafterUpdate(() => {\\r\\n\\t\\tif (diagram) {\\r\\n\\t\\t\\tdiagram.requestUpdate();\\r\\n\\t\\t}\\r\\n\\t});\\r\\n<\/script>\\r\\n\\r\\n<div class=\\"navbar absolute z-50 bg-base-100 pb-3\\">\\r\\n\\t<div class=\\"navbar-start\\">\\r\\n\\t\\t<label\\r\\n\\t\\t\\tfor=\\"node-drawer\\"\\r\\n\\t\\t\\tclass=\\"btn btn-circle btn-ghost {selectedNodes !== 1 ? 'btn-disabled' : ''}\\"\\r\\n\\t\\t\\t><Icon icon=\\"mdi:edit\\" /></label\\r\\n\\t\\t>\\r\\n\\t\\t<button on:click={addContact} class=\\"btn btn-circle btn-ghost\\">\\r\\n\\t\\t\\t<Icon icon=\\"mdi:plus\\" />\\r\\n\\t\\t</button>\\r\\n\\r\\n\\t\\t<button on:click={removeContact} disabled={!selectedNodes} class=\\"btn btn-circle btn-ghost\\">\\r\\n\\t\\t\\t<Icon icon=\\"mdi:minus\\" />\\r\\n\\t\\t</button>\\r\\n\\t</div>\\r\\n\\t<a href=\\"/\\" class=\\"btn btn-ghost navbar-center\\">\\r\\n\\t\\t<svg\\r\\n\\t\\t\\txmlns=\\"http://www.w3.org/2000/svg\\"\\r\\n\\t\\t\\twidth=\\"1.5em\\"\\r\\n\\t\\t\\theight=\\"1.5em\\"\\r\\n\\t\\t\\tviewBox=\\"0 0 24 24\\"\\r\\n\\t\\t\\t{...$$props}\\r\\n\\t\\t>\\r\\n\\t\\t\\t<path\\r\\n\\t\\t\\t\\tfill=\\"currentColor\\"\\r\\n\\t\\t\\t\\td=\\"M12 0h-.079c-1.66 0-3.239.349-4.667.978l.074-.029A12.3 12.3 0 0 0 3.52 3.523A12.2 12.2 0 0 0 .978 7.251l-.031.079A11.4 11.4 0 0 0 0 11.919v.086v-.004v.079c0 1.66.349 3.239.978 4.667l-.029-.074a12.3 12.3 0 0 0 2.572 3.807a12.2 12.2 0 0 0 3.729 2.542l.079.031c1.354.6 2.933.949 4.593.949h.083h-.004h.079c1.66 0 3.239-.349 4.667-.978l-.074.029a12.3 12.3 0 0 0 3.809-2.573a12.2 12.2 0 0 0 2.542-3.728l.031-.079c.6-1.354.949-2.932.949-4.593v-.158c0-1.66-.349-3.239-.978-4.667l.029.074a12.3 12.3 0 0 0-2.573-3.806A12.2 12.2 0 0 0 16.754.981L16.675.95C15.321.35 13.741 0 12.08 0h-.083zm.64 22.79v-2.087l5.193-2.633a.4.4 0 0 0 .154-.129l.001-.001a.34.34 0 0 0 .059-.191v-.011v.001v-1.186c.225-.082.412-.226.543-.412l.002-.004c.133-.179.214-.404.214-.648v-.118a1.15 1.15 0 0 0-.366-.746l-.001-.001a1.1 1.1 0 0 0-.75-.297h-.022h.001h-.02c-.308 0-.587.127-.786.332c-.205.2-.332.478-.332.787v.021v-.001v.059q.004.045.024.081v-.001c.013.222.096.423.227.583l-.001-.002c.133.163.304.289.501.364l.008.003v.949l-4.649 2.372v-1.942l2.039-.949a.5.5 0 0 0 .166-.13l.001-.001a.3.3 0 0 0 .071-.194v-3.233l3.793-2.134a.32.32 0 0 0 .142-.141l.001-.002a.4.4 0 0 0 .047-.189v-.901c.223-.079.409-.218.543-.397l.002-.003c.133-.177.214-.401.214-.644v-.04c0-.308-.127-.587-.332-.786a1.07 1.07 0 0 0-.775-.332H18.4a1.08 1.08 0 0 0-.71.366l-.001.001a1.1 1.1 0 0 0-.285.746v.025v-.001v.02c0 .243.08.466.216.646l-.002-.003c.137.182.322.321.538.397l.008.003v.688l-3.818 2.134a.5.5 0 0 0-.129.129l-.001.002a.34.34 0 0 0-.055.184v.017v-.001v3.2l-1.52.711v-6.972l3.2-1.566a.4.4 0 0 0 .153-.141l.001-.002a.35.35 0 0 0 .059-.189V7.04c.223-.079.409-.218.543-.397l.002-.003c.133-.177.214-.401.214-.644v-.021v.001v-.061a.08.08 0 0 0-.024-.057a1.13 1.13 0 0 0-.366-.719l-.001-.001a1.06 1.06 0 0 0-.738-.297h-.128a1.1 1.1 0 0 0-.719.378l-.001.001a1.1 1.1 0 0 0-.297.754v.123c.032.227.12.428.251.596l-.002-.003c.127.167.301.291.502.354l.007.002v.972l-2.656 1.304V5.288c.225-.082.412-.226.543-.412l.002-.004c.133-.179.214-.404.214-.648V4.2c0-.308-.127-.587-.332-.786a1.1 1.1 0 0 0-.787-.332h-.021h.001h-.02c-.308 0-.587.127-.786.332c-.205.2-.332.478-.332.787v.021v-.001v.118c.03.223.119.421.25.583l-.002-.002c.133.163.304.289.501.364l.008.003v6.569l-1.874-.996V7.865a.3.3 0 0 0-.048-.16l.001.001a1 1 0 0 0-.095-.119l-1.306-.998a.8.8 0 0 0 .07-.196l.001-.006q.023-.102.024-.222v-.024c0-.308-.127-.587-.332-.786a1.1 1.1 0 0 0-.786-.331H7.52h.001h-.02c-.308 0-.587.127-.786.332c-.205.2-.332.478-.332.787v.021v-.001v.024c0 .305.125.581.326.78c.2.205.478.332.787.332h.021h-.001h.015a.9.9 0 0 0 .288-.049l-.006.002c.11-.041.2-.081.287-.125l-.015.007l1.162.925v3.035a.3.3 0 0 0 .06.178l-.001-.001a.4.4 0 0 0 .152.129l.002.001l2.419 1.28V15.1l-4.055-1.874l.071-1.47v-.024a.3.3 0 0 0-.06-.178l.001.001a.4.4 0 0 0-.152-.129l-.002-.001l-1.851-.97a.5.5 0 0 0 .024-.157v-.2a1.13 1.13 0 0 0-.366-.719l-.001-.001a1.1 1.1 0 0 0-.752-.299h-.018h.001h-.007c-.305 0-.58.127-.775.332c-.208.2-.338.481-.338.792v.015v-.001v.118c.029.285.164.534.366.71l.001.001c.193.177.451.285.735.285h.131a1.5 1.5 0 0 0 .33-.083l-.01.003q.155-.06.275-.156l-.002.002l1.707.88l-.047 1.47v.008q0 .113.048.208l-.001-.003a.3.3 0 0 0 .164.142l.002.001l4.577 2.134v6.869q-.308 0-.605-.024l-.605-.047l.071-4.364a.35.35 0 0 0-.06-.191l.001.001a.36.36 0 0 0-.175-.142l-.002-.001l-2.87-1.328v-.125c0-.305-.127-.58-.332-.775a1.1 1.1 0 0 0-.787-.332H6.49h.001h-.114a1.08 1.08 0 0 0-.71.366l-.001.001a1.1 1.1 0 0 0-.285.746v.025v-.001v.007c0 .305.127.58.332.775c.195.205.47.332.775.332h.039q.236-.001.439-.094l-.007.003q.209-.1.369-.242l-.002.002l2.656 1.21v4.008a10.6 10.6 0 0 1-3.534-1.343l.048.027a10.9 10.9 0 0 1-2.773-2.354l-.014-.017a11.1 11.1 0 0 1-1.824-3.112l-.026-.076a10.3 10.3 0 0 1-.676-3.699v-.111c0-1.494.314-2.915.88-4.201l-.026.067a11.1 11.1 0 0 1 2.324-3.44A11 11 0 0 1 7.73 2.065l.071-.028a10.3 10.3 0 0 1 4.139-.856h.061h-.003h.064c1.494 0 2.915.314 4.201.88l-.067-.026a11.1 11.1 0 0 1 3.44 2.32a11 11 0 0 1 2.296 3.369l.028.071c.54 1.218.854 2.639.854 4.134v.067v-.003v.064c0 1.444-.292 2.82-.82 4.072l.026-.069a11.1 11.1 0 0 1-2.175 3.373l.005-.006a10.9 10.9 0 0 1-3.172 2.32l-.065.028c-1.16.568-2.516.932-3.948 1.009l-.026.001z\\"\\r\\n\\t\\t\\t/>\\r\\n\\t\\t</svg>\\r\\n\\t\\t<!-- svelte-ignore a11y-invalid-attribute -->\\r\\n\\t\\t<h1 class=\\"hidden text-3xl md:block\\">FamCoTree</h1>\\r\\n\\t</a>\\r\\n\\t<div class=\\"navbar-end\\">\\r\\n\\t\\t<div class=\\"dropdown\\">\\r\\n\\t\\t\\t<!-- <div tabindex=\\"-1\\" role=\\"button\\" class=\\"btn btn-circle btn-ghost\\">Export</div> -->\\r\\n\\r\\n\\t\\t\\t<button class=\\"btn btn-circle btn-ghost\\">\\r\\n\\t\\t\\t\\t<div class=\\"indicator\\">\\r\\n\\t\\t\\t\\t\\t<Icon icon=\\"mdi:download\\" />\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</button>\\r\\n\\t\\t\\t<ul class=\\"menu dropdown-content menu-sm z-[1] mt-3 rounded-box bg-base-100 p-2 shadow\\">\\r\\n\\t\\t\\t\\t<li><button on:click={downloadSVG}>SVG</button></li>\\r\\n\\t\\t\\t\\t<li><button on:click={downloadPNG}>PNG</button></li>\\r\\n\\t\\t\\t\\t<hr />\\r\\n\\t\\t\\t\\t<li>\\r\\n\\t\\t\\t\\t\\t<button on:click={downloadCSV}>CSV</button>\\r\\n\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t<li class=\\"disabled\\">\\r\\n\\t\\t\\t\\t\\t<button class=\\"btn-disabled\\">VCF</button>\\r\\n\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t</ul>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\"dropdown flex justify-center\\">\\r\\n\\t\\t\\t<button class=\\"btn btn-circle btn-ghost\\">\\r\\n\\t\\t\\t\\t<button class=\\"indicator\\" on:click={shareQR}>\\r\\n\\t\\t\\t\\t\\t<Icon icon=\\"material-symbols:share\\" />\\r\\n\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t</button>\\r\\n\\t\\t\\t<div\\r\\n\\t\\t\\t\\tclass=\\"  menu dropdown-content menu-sm z-[1] mr-40 mt-16 w-max rounded-box bg-base-100 p-2 shadow\\"\\r\\n\\t\\t\\t>\\r\\n\\t\\t\\t\\t{#if loading}\\r\\n\\t\\t\\t\\t\\t<div class=\\"flex justify-center\\">\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\"loading loading-spinner loading-lg\\"></span>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t{:else if qrCodeUrl}\\r\\n\\t\\t\\t\\t\\t<img\\r\\n\\t\\t\\t\\t\\t\\tsrc={qrCodeUrl}\\r\\n\\t\\t\\t\\t\\t\\talt=\\"QR Code\\"\\r\\n\\t\\t\\t\\t\\t\\tclass=\\"my-4 self-center\\"\\r\\n\\t\\t\\t\\t\\t\\tstyle=\\"width: 250px; height: 250px;\\"\\r\\n\\t\\t\\t\\t\\t/>\\r\\n\\t\\t\\t\\t\\t<div class=\\"flex gap-2\\">\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\"text\\" value={fileLink} class=\\"input input-bordered w-full\\" readonly />\\r\\n\\t\\t\\t\\t\\t\\t<button on:click={() => navigator.clipboard.writeText(fileLink)} class=\\"btn\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t>Copy</button\\r\\n\\t\\t\\t\\t\\t\\t>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t{/if}\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\r\\n\\t\\t<div class=\\"drawer-content\\">\\r\\n\\t\\t\\t<label for=\\"settings-drawer\\" class=\\"btn btn-circle btn-ghost\\"\\r\\n\\t\\t\\t\\t><Icon icon=\\"mdi:settings\\" /></label\\r\\n\\t\\t\\t>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\\r\\n\\r\\n<div bind:this={FamCoTree} class=\\"grow\\" />\\r\\n\\r\\n<!-- left sidebar -->\\r\\n\\r\\n<div class=\\"drawer z-50\\">\\r\\n\\t<input id=\\"node-drawer\\" bind:checked={nodeDrawer} type=\\"checkbox\\" class=\\"drawer-toggle\\" />\\r\\n\\r\\n\\t<div class=\\"drawer-side\\">\\r\\n\\t\\t<label for=\\"node-drawer\\" aria-label=\\"close sidebar\\" class=\\"drawer-overlay\\"></label>\\r\\n\\r\\n\\t\\t<aside class=\\"menu w-80 bg-white p-4 text-base-content\\">\\r\\n\\t\\t\\t<!-- Sidebar Header -->\\r\\n\\t\\t\\t<h2 class=\\"mb-4 text-center text-2xl font-bold\\">Contact Edit</h2>\\r\\n\\r\\n\\t\\t\\t<!-- Sidebar Form -->\\r\\n\\t\\t\\t<form class=\\"form-control\\">\\r\\n\\t\\t\\t\\t<div class=\\"avatar self-center\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\"w-fill mask mask-squircle\\">\\r\\n\\t\\t\\t\\t\\t\\t<img src={cForm.pic} alt=\\"Contact\\" />\\r\\n\\t\\t\\t\\t\\t\\t<button\\r\\n\\t\\t\\t\\t\\t\\t\\tclass=\\"absolute inset-0 flex cursor-pointer items-center justify-center bg-black bg-opacity-0 transition-all hover:bg-opacity-30\\"\\r\\n\\t\\t\\t\\t\\t\\t\\ton:click={printLoc}\\r\\n\\t\\t\\t\\t\\t\\t>\\r\\n\\t\\t\\t\\t\\t\\t\\t<svg\\r\\n\\t\\t\\t\\t\\t\\t\\t\\txmlns=\\"http://www.w3.org/2000/svg\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tclass=\\"h-8 w-8 text-white opacity-0 transition-opacity hover:opacity-100\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tfill=\\"none\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tviewBox=\\"0 0 24 24\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tstroke=\\"currentColor\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<path\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tstroke-linecap=\\"round\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tstroke-linejoin=\\"round\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tstroke-width=\\"2\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\td=\\"M5 12h14M12 5l7 7-7 7\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t/>\\r\\n\\t\\t\\t\\t\\t\\t\\t</svg>\\r\\n\\t\\t\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t<div class=\\"relative mt-4\\">\\r\\n\\t\\t\\t\\t\\t<input\\r\\n\\t\\t\\t\\t\\t\\ttype=\\"text\\"\\r\\n\\t\\t\\t\\t\\t\\tid=\\"dName\\"\\r\\n\\t\\t\\t\\t\\t\\tbind:value={cForm.name}\\r\\n\\t\\t\\t\\t\\t\\ton:input={fixdUID}\\r\\n\\t\\t\\t\\t\\t\\tplaceholder=\\" \\"\\r\\n\\t\\t\\t\\t\\t\\tclass=\\"peer input h-12 w-full rounded-lg border-2 border-gray-300 px-4 pb-2 pt-1 focus:border-primary focus:outline-none focus:ring-0\\"\\r\\n\\t\\t\\t\\t\\t/>\\r\\n\\t\\t\\t\\t\\t<label\\r\\n\\t\\t\\t\\t\\t\\tfor=\\"dName\\"\\r\\n\\t\\t\\t\\t\\t\\tclass=\\"absolute left-4 top-0 -translate-y-1/2 transform bg-white px-1 transition-all duration-200\\r\\n\\t\\t\\t\\t\\t\\t\\tpeer-placeholder-shown:top-6 peer-placeholder-shown:text-base peer-placeholder-shown:text-gray-400\\r\\n\\t\\t\\t\\t\\t\\t\\tpeer-focus:top-0 peer-focus:-translate-y-1/2 peer-focus:text-sm peer-focus:text-primary\\"\\r\\n\\t\\t\\t\\t\\t>\\r\\n\\t\\t\\t\\t\\t\\tName\\r\\n\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t<div class=\\"relative mt-4\\">\\r\\n\\t\\t\\t\\t\\t<input\\r\\n\\t\\t\\t\\t\\t\\ttype=\\"text\\"\\r\\n\\t\\t\\t\\t\\t\\tid=\\"dSurname\\"\\r\\n\\t\\t\\t\\t\\t\\tbind:value={cForm.surname}\\r\\n\\t\\t\\t\\t\\t\\ton:input={fixdUID}\\r\\n\\t\\t\\t\\t\\t\\tplaceholder=\\"\\"\\r\\n\\t\\t\\t\\t\\t\\tclass=\\"peer input h-12 w-full rounded-lg border-2 border-gray-300 px-4 pb-2 pt-1 focus:border-primary focus:outline-none focus:ring-0\\"\\r\\n\\t\\t\\t\\t\\t/>\\r\\n\\t\\t\\t\\t\\t<label\\r\\n\\t\\t\\t\\t\\t\\tfor=\\"dSurname\\"\\r\\n\\t\\t\\t\\t\\t\\tclass=\\"absolute left-4 top-0 -translate-y-1/2 transform bg-white px-1 transition-all duration-200\\r\\n\\t\\t\\t\\t\\t\\t\\tpeer-placeholder-shown:top-6 peer-placeholder-shown:text-base peer-placeholder-shown:text-gray-400\\r\\n\\t\\t\\t\\t\\t\\t\\tpeer-focus:top-0 peer-focus:-translate-y-1/2 peer-focus:text-sm peer-focus:text-primary\\"\\r\\n\\t\\t\\t\\t\\t>\\r\\n\\t\\t\\t\\t\\t\\tSurname\\r\\n\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\"collapse collapse-plus\\">\\r\\n\\t\\t\\t\\t\\t<input\\r\\n\\t\\t\\t\\t\\t\\ttype=\\"checkbox\\"\\r\\n\\t\\t\\t\\t\\t\\tchecked={openNames}\\r\\n\\t\\t\\t\\t\\t\\ton:change={() => (openNames = !openNames)}\\r\\n\\t\\t\\t\\t\\t\\tclass=\\"peer\\"\\r\\n\\t\\t\\t\\t\\t/>\\r\\n\\t\\t\\t\\t\\t<div class=\\"collapse-title text-xs font-medium\\">\\r\\n\\t\\t\\t\\t\\t\\t{openNames ? 'Less' : 'More names'}\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\"collapse-content\\">\\r\\n\\t\\t\\t\\t\\t\\t{#if openNames}\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\"relative\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\ttype=\\"text\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tid=\\"dPrefix\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tbind:value={cForm.prefix}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tplaceholder=\\"\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\\"peer input h-12 w-full rounded-lg border-2 border-gray-300 px-4 pb-2 pt-3 focus:border-primary focus:outline-none focus:ring-0\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t/>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tfor=\\"dPrefix\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\\"absolute left-4 top-0 -translate-y-1/2 transform bg-white px-1 transition-all duration-200\\r\\n\\t\\t\\t\\t\\t\\t\\tpeer-placeholder-shown:top-6 peer-placeholder-shown:text-base peer-placeholder-shown:text-gray-400\\r\\n\\t\\t\\t\\t\\t\\t\\tpeer-focus:top-0 peer-focus:-translate-y-1/2 peer-focus:text-sm peer-focus:text-primary\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tPrefix\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\"relative mt-4\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\ttype=\\"text\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tid=\\"dSuffix\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tbind:value={cForm.suffix}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tplaceholder=\\"\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\\"peer input h-12 w-full rounded-lg border-2 border-gray-300 px-4 pb-2 pt-1 focus:border-primary focus:outline-none focus:ring-0\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t/>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tfor=\\"dSuffix\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\\"absolute left-4 top-0 -translate-y-1/2 transform bg-white px-1 transition-all duration-200\\r\\n\\t\\t\\t\\t\\t\\t\\tpeer-placeholder-shown:top-6 peer-placeholder-shown:text-base peer-placeholder-shown:text-gray-400\\r\\n\\t\\t\\t\\t\\t\\t\\tpeer-focus:top-0 peer-focus:-translate-y-1/2 peer-focus:text-sm peer-focus:text-primary\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tSuffix\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\"relative mt-4\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\ttype=\\"text\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tid=\\"dNickname\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tbind:value={cForm.nickname}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tplaceholder=\\"\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\\"peer input h-12 w-full rounded-lg border-2 border-gray-300 px-4 pb-2 pt-1 focus:border-primary focus:outline-none focus:ring-0\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t/>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tfor=\\"dNickname\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tclass=\\"absolute left-4 top-0 -translate-y-1/2 transform bg-white px-1 transition-all duration-200\\r\\n\\t\\t\\t\\t\\t\\t\\tpeer-placeholder-shown:top-6 peer-placeholder-shown:text-base peer-placeholder-shown:text-gray-400\\r\\n\\t\\t\\t\\t\\t\\t\\tpeer-focus:top-0 peer-focus:-translate-y-1/2 peer-focus:text-sm peer-focus:text-primary\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tNickname\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t{/if}\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t<div class=\\"relative\\">\\r\\n\\t\\t\\t\\t\\t<input\\r\\n\\t\\t\\t\\t\\t\\ttype=\\"date\\"\\r\\n\\t\\t\\t\\t\\t\\tid=\\"dBorn\\"\\r\\n\\t\\t\\t\\t\\t\\tbind:value={cForm.Birthday}\\r\\n\\t\\t\\t\\t\\t\\ton:input={fixdUID}\\r\\n\\t\\t\\t\\t\\t\\tplaceholder=\\"\\"\\r\\n\\t\\t\\t\\t\\t\\tclass=\\"peer input h-12 w-full rounded-lg border-2 border-gray-300 px-4 pb-2 pt-2 focus:border-primary focus:outline-none focus:ring-0\\"\\r\\n\\t\\t\\t\\t\\t/>\\r\\n\\t\\t\\t\\t\\t<label\\r\\n\\t\\t\\t\\t\\t\\tfor=\\"dBorn\\"\\r\\n\\t\\t\\t\\t\\t\\tclass=\\"absolute left-4 top-0 -translate-y-1/2 transform bg-white px-1 transition-all duration-200\\r\\n\\t\\t\\t\\t\\t\\t\\tpeer-placeholder-shown:top-6 peer-placeholder-shown:text-base peer-placeholder-shown:text-gray-400\\r\\n\\t\\t\\t\\t\\t\\t\\tpeer-focus:top-0 peer-focus:-translate-y-1/2 peer-focus:text-sm peer-focus:text-primary\\"\\r\\n\\t\\t\\t\\t\\t>\\r\\n\\t\\t\\t\\t\\t\\tBirth date\\r\\n\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t{#if cForm.Birthday}\\r\\n\\t\\t\\t\\t\\t\\t<button\\r\\n\\t\\t\\t\\t\\t\\t\\ttype=\\"button\\"\\r\\n\\t\\t\\t\\t\\t\\t\\tclass=\\"absolute right-12 top-4 text-gray-400 hover:text-red-500\\"\\r\\n\\t\\t\\t\\t\\t\\t\\ton:click={() => {\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tcForm.Birthday = '';\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tfixdUID();\\r\\n\\t\\t\\t\\t\\t\\t\\t}}\\r\\n\\t\\t\\t\\t\\t\\t>\\r\\n\\t\\t\\t\\t\\t\\t\\t&#10005;\\r\\n\\t\\t\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t\\t\\t{/if}\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\"relative mt-4\\">\\r\\n\\t\\t\\t\\t\\t<input\\r\\n\\t\\t\\t\\t\\t\\ttype=\\"date\\"\\r\\n\\t\\t\\t\\t\\t\\tid=\\"dDied\\"\\r\\n\\t\\t\\t\\t\\t\\tbind:value={cForm.died}\\r\\n\\t\\t\\t\\t\\t\\tplaceholder=\\"\\"\\r\\n\\t\\t\\t\\t\\t\\tclass=\\"peer input h-12 w-full rounded-lg border-2 border-gray-300 px-4 pb-2 pt-2 focus:border-primary focus:outline-none focus:ring-0\\"\\r\\n\\t\\t\\t\\t\\t/>\\r\\n\\t\\t\\t\\t\\t<label\\r\\n\\t\\t\\t\\t\\t\\tfor=\\"dDied\\"\\r\\n\\t\\t\\t\\t\\t\\tclass=\\"absolute left-4 top-0 -translate-y-1/2 transform bg-white px-1 transition-all duration-200\\r\\n\\t\\t\\t\\t\\t\\t\\tpeer-placeholder-shown:top-6 peer-placeholder-shown:text-base peer-placeholder-shown:text-gray-400\\r\\n\\t\\t\\t\\t\\t\\t\\tpeer-focus:top-0 peer-focus:-translate-y-1/2 peer-focus:text-sm peer-focus:text-primary\\"\\r\\n\\t\\t\\t\\t\\t>\\r\\n\\t\\t\\t\\t\\t\\tDeath date\\r\\n\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t{#if cForm.died}\\r\\n\\t\\t\\t\\t\\t\\t<button\\r\\n\\t\\t\\t\\t\\t\\t\\ttype=\\"button\\"\\r\\n\\t\\t\\t\\t\\t\\t\\tclass=\\"absolute right-12 top-4 text-gray-400 hover:text-red-500\\"\\r\\n\\t\\t\\t\\t\\t\\t\\ton:click={() => (cForm.died = '')}\\r\\n\\t\\t\\t\\t\\t\\t>\\r\\n\\t\\t\\t\\t\\t\\t\\t&#10005; <!-- Clear button moved to the left -->\\r\\n\\t\\t\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t\\t\\t{/if}\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\"collapse-title text-xs font-medium\\">\\r\\n\\t\\t\\t\\t\\t{openNames ? 'Less' : 'More dates'}\\r\\n\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t<div class=\\"divider\\">Emails</div>\\r\\n\\t\\t\\t\\t<div class=\\"divider\\">Phones</div>\\r\\n\\t\\t\\t\\t<div class=\\"divider\\">Addresses</div>\\r\\n\\t\\t\\t\\t<div class=\\"divider\\">Relations</div>\\r\\n\\t\\t\\t\\t<div class=\\"divider\\">Custom Fields</div>\\r\\n\\r\\n\\t\\t\\t\\t<div class=\\"relative mt-4\\">\\r\\n\\t\\t\\t\\t\\t<textarea\\r\\n\\t\\t\\t\\t\\t\\ttype=\\"text\\"\\r\\n\\t\\t\\t\\t\\t\\tid=\\"dNotes\\"\\r\\n\\t\\t\\t\\t\\t\\tbind:value={cForm.Notes}\\r\\n\\t\\t\\t\\t\\t\\tplaceholder=\\"Notes\\"\\r\\n\\t\\t\\t\\t\\t\\tclass=\\"peer input min-h-28 w-full rounded-lg border-2 border-gray-300 px-4 pb-2 pt-1 focus:border-primary focus:outline-none focus:ring-0\\"\\r\\n\\t\\t\\t\\t\\t/>\\r\\n\\t\\t\\t\\t\\t<label\\r\\n\\t\\t\\t\\t\\t\\tfor=\\"dNotes\\"\\r\\n\\t\\t\\t\\t\\t\\tclass=\\"absolute left-4 top-0 -translate-y-1/2 transform bg-white px-1 transition-all duration-200\\r\\n\\t\\t\\t\\t\\t\\t\\tpeer-placeholder-shown:top-6 peer-placeholder-shown:text-base peer-placeholder-shown:text-gray-400\\r\\n\\t\\t\\t\\t\\t\\t\\tpeer-focus:top-0 peer-focus:-translate-y-1/2 peer-focus:text-sm peer-focus:text-primary\\"\\r\\n\\t\\t\\t\\t\\t>\\r\\n\\t\\t\\t\\t\\t\\tNotes\\r\\n\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t<div class=\\"relative mt-4\\">\\r\\n\\t\\t\\t\\t\\t<input\\r\\n\\t\\t\\t\\t\\t\\ttype=\\"text\\"\\r\\n\\t\\t\\t\\t\\t\\tid=\\"dUID\\"\\r\\n\\t\\t\\t\\t\\t\\tbind:value={cForm.key}\\r\\n\\t\\t\\t\\t\\t\\tplaceholder=\\"\\"\\r\\n\\t\\t\\t\\t\\t\\tdisabled={lockUID}\\r\\n\\t\\t\\t\\t\\t\\tclass=\\"peer input h-12 w-full rounded-lg border-2 border-gray-300 px-4 pb-2 pt-1 text-center\\"\\r\\n\\t\\t\\t\\t\\t/>\\r\\n\\t\\t\\t\\t\\t<label\\r\\n\\t\\t\\t\\t\\t\\tfor=\\"dUID\\"\\r\\n\\t\\t\\t\\t\\t\\tclass=\\"absolute left-4 top-0 -translate-y-1/2 transform bg-gray-100 px-1 transition-all duration-200\\r\\n\\t\\t\\t\\t\\t\\t\\tpeer-placeholder-shown:top-6 peer-placeholder-shown:text-base peer-placeholder-shown:text-gray-400\\r\\n\\t\\t\\t\\t\\t\\t\\tpeer-focus:top-0 peer-focus:-translate-y-1/2 peer-focus:text-sm peer-focus:text-primary\\"\\r\\n\\t\\t\\t\\t\\t>\\r\\n\\t\\t\\t\\t\\t\\tUID\\r\\n\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\"relative mt-4\\">\\r\\n\\t\\t\\t\\t\\t<input\\r\\n\\t\\t\\t\\t\\t\\ttype=\\"text\\"\\r\\n\\t\\t\\t\\t\\t\\tid=\\"dPosition\\"\\r\\n\\t\\t\\t\\t\\t\\tbind:value={cForm.position}\\r\\n\\t\\t\\t\\t\\t\\tplaceholder=\\"\\"\\r\\n\\t\\t\\t\\t\\t\\tdisabled\\r\\n\\t\\t\\t\\t\\t\\tclass=\\"peer input h-12 w-full rounded-lg border-2 border-gray-300 px-4 pb-2 pt-1 text-center\\"\\r\\n\\t\\t\\t\\t\\t/>\\r\\n\\t\\t\\t\\t\\t<label\\r\\n\\t\\t\\t\\t\\t\\tfor=\\"dPosition\\"\\r\\n\\t\\t\\t\\t\\t\\tclass=\\"absolute left-4 top-0 -translate-y-1/2 transform bg-gray-100 px-1 transition-all duration-200\\r\\n\\t\\t\\t\\t\\t\\t\\tpeer-placeholder-shown:top-6 peer-placeholder-shown:text-base peer-placeholder-shown:text-gray-400\\r\\n\\t\\t\\t\\t\\t\\t\\tpeer-focus:top-0 peer-focus:-translate-y-1/2 peer-focus:text-sm peer-focus:text-primary\\"\\r\\n\\t\\t\\t\\t\\t>\\r\\n\\t\\t\\t\\t\\t\\tPosition\\r\\n\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<button on:click={saveContact} class=\\"btn btn-primary mt-4\\">Update</button>\\r\\n\\t\\t\\t</form>\\r\\n\\t\\t</aside>\\r\\n\\t</div>\\r\\n</div>\\r\\n\\r\\n<!-- right sidebar -->\\r\\n\\r\\n<div class=\\"drawer drawer-end z-50\\">\\r\\n\\t<input id=\\"settings-drawer\\" type=\\"checkbox\\" class=\\"drawer-toggle\\" />\\r\\n\\r\\n\\t<div class=\\"drawer-side\\">\\r\\n\\t\\t<label for=\\"settings-drawer\\" aria-label=\\"close sidebar\\" class=\\"drawer-overlay\\"></label>\\r\\n\\r\\n\\t\\t<aside class=\\"menu w-80 bg-white p-4 text-base-content\\">\\r\\n\\t\\t\\t<!-- Sidebar Header -->\\r\\n\\t\\t\\t<h2 class=\\"mb-4 text-center text-2xl font-bold\\">Settings</h2>\\r\\n\\r\\n\\t\\t\\t<!-- Sidebar Form -->\\r\\n\\t\\t\\t<div class=\\"form-control\\">\\r\\n\\t\\t\\t\\t<div class=\\"form-control\\">\\r\\n\\t\\t\\t\\t\\t<label class=\\"label cursor-pointer\\">\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\"text-base\\">Dark mode</span>\\r\\n\\t\\t\\t\\t\\t\\t<label class=\\"grid cursor-pointer place-items-center\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input\\r\\n\\t\\t\\t\\t\\t\\t\\t\\ttype=\\"checkbox\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tvalue=\\"synthwave\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tclass=\\"theme-controller toggle col-span-2 col-start-1 row-start-1 bg-base-content\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t/>\\r\\n\\t\\t\\t\\t\\t\\t\\t<svg\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tclass=\\"col-start-1 row-start-1 fill-base-100 stroke-base-100\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\txmlns=\\"http://www.w3.org/2000/svg\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\twidth=\\"14\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\theight=\\"14\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tviewBox=\\"0 0 24 24\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tfill=\\"none\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tstroke=\\"currentColor\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tstroke-width=\\"2\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tstroke-linecap=\\"round\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tstroke-linejoin=\\"round\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<circle cx=\\"12\\" cy=\\"12\\" r=\\"5\\" />\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<path\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\td=\\"M12 1v2M12 21v2M4.2 4.2l1.4 1.4M18.4 18.4l1.4 1.4M1 12h2M21 12h2M4.2 19.8l1.4-1.4M18.4 5.6l1.4-1.4\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t/>\\r\\n\\t\\t\\t\\t\\t\\t\\t</svg>\\r\\n\\t\\t\\t\\t\\t\\t\\t<svg\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tclass=\\"col-start-2 row-start-1 fill-base-100 stroke-base-100\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\txmlns=\\"http://www.w3.org/2000/svg\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\twidth=\\"14\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\theight=\\"14\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tviewBox=\\"0 0 24 24\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tfill=\\"none\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tstroke=\\"currentColor\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tstroke-width=\\"2\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tstroke-linecap=\\"round\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tstroke-linejoin=\\"round\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<path d=\\"M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z\\"></path>\\r\\n\\t\\t\\t\\t\\t\\t\\t</svg>\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t<div class=\\"divider\\">Diagram style</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t<div class=\\"mt-4 flex items-center justify-between\\">\\r\\n\\t\\t\\t\\t\\t\\t<label class=\\"cursor-pointer text-base\\" for=\\"colorPicker\\">Diagram color</label>\\r\\n\\t\\t\\t\\t\\t\\t<input\\r\\n\\t\\t\\t\\t\\t\\t\\ttype=\\"color\\"\\r\\n\\t\\t\\t\\t\\t\\t\\tid=\\"colorPicker\\"\\r\\n\\t\\t\\t\\t\\t\\t\\tbind:value={diagramColor}\\r\\n\\t\\t\\t\\t\\t\\t\\ton:input={updateDiagramColor}\\r\\n\\t\\t\\t\\t\\t\\t\\tclass=\\" ml-2 h-8 w-8 cursor-pointer\\"\\r\\n\\t\\t\\t\\t\\t\\t/>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t<div class=\\"relative mt-4\\">\\r\\n\\t\\t\\t\\t\\t\\t<select\\r\\n\\t\\t\\t\\t\\t\\t\\tid=\\"dContactStyle\\"\\r\\n\\t\\t\\t\\t\\t\\t\\tbind:value={diagramContactStyle}\\r\\n\\t\\t\\t\\t\\t\\t\\tclass=\\"peer select h-12 w-full rounded-lg border-2 border-gray-300 px-4 pb-2 pt-1 focus:border-primary focus:outline-none focus:ring-0\\"\\r\\n\\t\\t\\t\\t\\t\\t\\tplaceholder=\\" \\"\\r\\n\\t\\t\\t\\t\\t\\t>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option selected>Simple</option>\\r\\n\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t<label\\r\\n\\t\\t\\t\\t\\t\\t\\tfor=\\"dOption\\"\\r\\n\\t\\t\\t\\t\\t\\t\\tclass=\\"absolute left-4 top-0 -translate-y-1/2 transform bg-white px-1 transition-all duration-200\\r\\n\\t\\t\\t\\t\\t\\t\\tpeer-placeholder-shown:top-6 peer-placeholder-shown:text-base peer-placeholder-shown:text-gray-400\\r\\n\\t\\t\\t\\t\\t\\t\\tpeer-focus:top-0 peer-focus:-translate-y-1/2 peer-focus:text-sm peer-focus:text-primary\\"\\r\\n\\t\\t\\t\\t\\t\\t>\\r\\n\\t\\t\\t\\t\\t\\t\\tDiagram contact style\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\"relative mb-4 mt-4\\">\\r\\n\\t\\t\\t\\t\\t\\t<select\\r\\n\\t\\t\\t\\t\\t\\t\\tid=\\"dRelationStyle\\"\\r\\n\\t\\t\\t\\t\\t\\t\\tbind:value={diagramRelationStlye}\\r\\n\\t\\t\\t\\t\\t\\t\\ton:change={changeRelationStyle}\\r\\n\\t\\t\\t\\t\\t\\t\\tclass=\\"peer select h-12 w-full rounded-lg border-2 border-gray-300 px-4 pb-2 pt-1 focus:border-primary focus:outline-none focus:ring-0\\"\\r\\n\\t\\t\\t\\t\\t\\t\\tplaceholder=\\" \\"\\r\\n\\t\\t\\t\\t\\t\\t>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option selected value={go.Link.Bezier}>Free Hand</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value={go.Link.JumpOver}>Boxy Jump</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t<option value={go.Link.JumpGap}>Boxy Gap</option>\\r\\n\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t<label\\r\\n\\t\\t\\t\\t\\t\\t\\tfor=\\"dOption\\"\\r\\n\\t\\t\\t\\t\\t\\t\\tclass=\\"absolute left-4 top-0 -translate-y-1/2 transform bg-white px-1 transition-all duration-200\\r\\n\\t\\t\\t\\t\\t\\t\\tpeer-placeholder-shown:top-6 peer-placeholder-shown:text-base peer-placeholder-shown:text-gray-400\\r\\n\\t\\t\\t\\t\\t\\t\\tpeer-focus:top-0 peer-focus:-translate-y-1/2 peer-focus:text-sm peer-focus:text-primary\\"\\r\\n\\t\\t\\t\\t\\t\\t>\\r\\n\\t\\t\\t\\t\\t\\t\\tDiagram relation style\\r\\n\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\"divider\\">Automation</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t<label class=\\"label cursor-pointer\\">\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\"label-text\\">Readonly UID</span>\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\"checkbox\\" bind:checked={lockUID} class=\\"toggle toggle-primary\\" />\\r\\n\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t<label class=\\"label cursor-pointer\\">\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\"label-text\\">Auto update UID</span>\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\"checkbox\\" bind:checked={autoUpdateUID} class=\\"toggle toggle-primary\\" />\\r\\n\\t\\t\\t\\t\\t</label>\\r\\n\\r\\n\\t\\t\\t\\t\\t<label class=\\"label cursor-pointer\\">\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\"label-text\\">Auto add reverse relation</span>\\r\\n\\t\\t\\t\\t\\t\\t<input\\r\\n\\t\\t\\t\\t\\t\\t\\ttype=\\"checkbox\\"\\r\\n\\t\\t\\t\\t\\t\\t\\tbind:checked={autoReverseRelation}\\r\\n\\t\\t\\t\\t\\t\\t\\tclass=\\" toggle toggle-primary\\"\\r\\n\\t\\t\\t\\t\\t\\t/>\\r\\n\\t\\t\\t\\t\\t</label>\\r\\n\\r\\n\\t\\t\\t\\t\\t<div class=\\"divider\\">Danger zone</div>\\r\\n\\t\\t\\t\\t\\t<button on:click={editScheme} class=\\"btn btn-error mt-4 bg-red-300\\">Edit scheme</button>\\r\\n\\t\\t\\t\\t\\t<button on:click={removeAllRelations} class=\\"btn btn-error mt-4\\"\\r\\n\\t\\t\\t\\t\\t\\t>Delete all {linkCount} relations</button\\r\\n\\t\\t\\t\\t\\t>\\r\\n\\t\\t\\t\\t\\t<button on:click={removeAllContacts} class=\\"btn btn-error mt-4\\"\\r\\n\\t\\t\\t\\t\\t\\t>Delete all {nodeCount} contacts</button\\r\\n\\t\\t\\t\\t\\t>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</aside>\\r\\n\\t</div>\\r\\n</div>\\r\\n\\r\\n<!-- scheme dialog -->\\r\\n\\r\\n<dialog bind:this={dialogVar} id=\\"shceme_dialog\\" class=\\"modal\\">\\r\\n\\t<div class=\\"modal-box w-11/12 max-w-5xl\\">\\r\\n\\t\\t<form method=\\"dialog\\">\\r\\n\\t\\t\\t<button class=\\"btn btn-circle btn-ghost btn-sm absolute right-2 top-2\\">✕</button>\\r\\n\\t\\t</form>\\r\\n\\t\\t<h3 class=\\"text-lg font-bold\\">Scheme editor</h3>\\r\\n\\t\\t<p class=\\"py-4\\">Be carefull when updating scheme, use proper JSON syntax!</p>\\r\\n\\r\\n\\t\\t<textarea\\r\\n\\t\\t\\tbind:value={dialogValue}\\r\\n\\t\\t\\tplaceholder=\\"JSON scheme\\"\\r\\n\\t\\t\\tclass=\\" textarea textarea-bordered min-h-[300px] w-full resize\\"\\r\\n\\t\\t/>\\r\\n\\t\\t<div class=\\"modal-action\\">\\r\\n\\t\\t\\t<form method=\\"dialog\\">\\r\\n\\t\\t\\t\\t<!-- if there is a button, it will close the modal -->\\r\\n\\t\\t\\t\\t<button on:click={copyScheme} class=\\"btn btn-primary\\">Copy to clipboard</button>\\r\\n\\t\\t\\t\\t<button on:click={updateScheme} class=\\"btn btn-error\\">Update</button>\\r\\n\\t\\t\\t</form>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\t<form method=\\"dialog\\" class=\\"modal-backdrop\\">\\r\\n\\t\\t<button>close</button>\\r\\n\\t</form>\\r\\n</dialog>\\r\\n\\r\\n<style>\\r\\n\\t/*\\r\\n        Cannot target component in CSS, target SVG\\r\\n        instead using Svelte's :global() function\\r\\n    */\\r\\n\\tdiv :global(svg) {\\r\\n\\t\\tfont-size: 24px;\\r\\n\\t\\tline-height: 1em;\\r\\n\\t}\\r\\n\\r\\n\\t/*\\r\\n        Must use :global() because Svelte cannot assign style to a\\r\\n        component by class name, it can only work with standard HTML tags.\\r\\n    */\\r\\n\\tdiv :global(.big-icon) {\\r\\n\\t\\tfont-size: 72px;\\r\\n\\t}\\r\\n</style>\\r\\n"],"names":[],"mappings":"AA4jDC,iBAAG,CAAS,GAAK,CAChB,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,GACd,CAMA,iBAAG,CAAS,SAAW,CACtB,SAAS,CAAE,IACZ"}`
};
function lightenColor(hex, percent) {
  let r = parseInt(hex.slice(1, 3), 16);
  let g = parseInt(hex.slice(3, 5), 16);
  let b = parseInt(hex.slice(5, 7), 16);
  r = Math.min(255, Math.floor(r + r * (percent / 100)));
  g = Math.min(255, Math.floor(g + g * (percent / 100)));
  b = Math.min(255, Math.floor(b + b * (percent / 100)));
  return `#${((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1)}`;
}
const Page = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let nodeDrawer = false;
  const cForm = {
    name: "",
    surname: "",
    prefix: "",
    suffix: "",
    nickname: "",
    Birthday: "",
    died: "",
    position: "",
    Notes: "",
    pic: ""
  };
  let FamCoTree;
  let dialogVar;
  let diagramColor = "#A5A4F4";
  lightenColor("#A5A4F4", 20);
  lightenColor("#A5A4F4", 35);
  let lockUID = true;
  let autoUpdateUID = true;
  let autoReverseRelation = true;
  let nodeCount = 0;
  let linkCount = 0;
  $$result.css.add(css);
  return `<div class="navbar absolute z-50 bg-base-100 pb-3 svelte-m7otc3"><div class="navbar-start svelte-m7otc3"><label for="node-drawer" class="${"btn btn-circle btn-ghost " + escape("btn-disabled", true)}">${validate_component(Icon, "Icon").$$render($$result, { icon: "mdi:edit" }, {}, {})}</label> <button class="btn btn-circle btn-ghost">${validate_component(Icon, "Icon").$$render($$result, { icon: "mdi:plus" }, {}, {})}</button> <button ${"disabled"} class="btn btn-circle btn-ghost">${validate_component(Icon, "Icon").$$render($$result, { icon: "mdi:minus" }, {}, {})}</button></div> <a href="/" class="btn btn-ghost navbar-center"><svg${spread(
    [
      { xmlns: "http://www.w3.org/2000/svg" },
      { width: "1.5em" },
      { height: "1.5em" },
      { viewBox: "0 0 24 24" },
      escape_object($$props)
    ],
    {}
  )}><path fill="currentColor" d="M12 0h-.079c-1.66 0-3.239.349-4.667.978l.074-.029A12.3 12.3 0 0 0 3.52 3.523A12.2 12.2 0 0 0 .978 7.251l-.031.079A11.4 11.4 0 0 0 0 11.919v.086v-.004v.079c0 1.66.349 3.239.978 4.667l-.029-.074a12.3 12.3 0 0 0 2.572 3.807a12.2 12.2 0 0 0 3.729 2.542l.079.031c1.354.6 2.933.949 4.593.949h.083h-.004h.079c1.66 0 3.239-.349 4.667-.978l-.074.029a12.3 12.3 0 0 0 3.809-2.573a12.2 12.2 0 0 0 2.542-3.728l.031-.079c.6-1.354.949-2.932.949-4.593v-.158c0-1.66-.349-3.239-.978-4.667l.029.074a12.3 12.3 0 0 0-2.573-3.806A12.2 12.2 0 0 0 16.754.981L16.675.95C15.321.35 13.741 0 12.08 0h-.083zm.64 22.79v-2.087l5.193-2.633a.4.4 0 0 0 .154-.129l.001-.001a.34.34 0 0 0 .059-.191v-.011v.001v-1.186c.225-.082.412-.226.543-.412l.002-.004c.133-.179.214-.404.214-.648v-.118a1.15 1.15 0 0 0-.366-.746l-.001-.001a1.1 1.1 0 0 0-.75-.297h-.022h.001h-.02c-.308 0-.587.127-.786.332c-.205.2-.332.478-.332.787v.021v-.001v.059q.004.045.024.081v-.001c.013.222.096.423.227.583l-.001-.002c.133.163.304.289.501.364l.008.003v.949l-4.649 2.372v-1.942l2.039-.949a.5.5 0 0 0 .166-.13l.001-.001a.3.3 0 0 0 .071-.194v-3.233l3.793-2.134a.32.32 0 0 0 .142-.141l.001-.002a.4.4 0 0 0 .047-.189v-.901c.223-.079.409-.218.543-.397l.002-.003c.133-.177.214-.401.214-.644v-.04c0-.308-.127-.587-.332-.786a1.07 1.07 0 0 0-.775-.332H18.4a1.08 1.08 0 0 0-.71.366l-.001.001a1.1 1.1 0 0 0-.285.746v.025v-.001v.02c0 .243.08.466.216.646l-.002-.003c.137.182.322.321.538.397l.008.003v.688l-3.818 2.134a.5.5 0 0 0-.129.129l-.001.002a.34.34 0 0 0-.055.184v.017v-.001v3.2l-1.52.711v-6.972l3.2-1.566a.4.4 0 0 0 .153-.141l.001-.002a.35.35 0 0 0 .059-.189V7.04c.223-.079.409-.218.543-.397l.002-.003c.133-.177.214-.401.214-.644v-.021v.001v-.061a.08.08 0 0 0-.024-.057a1.13 1.13 0 0 0-.366-.719l-.001-.001a1.06 1.06 0 0 0-.738-.297h-.128a1.1 1.1 0 0 0-.719.378l-.001.001a1.1 1.1 0 0 0-.297.754v.123c.032.227.12.428.251.596l-.002-.003c.127.167.301.291.502.354l.007.002v.972l-2.656 1.304V5.288c.225-.082.412-.226.543-.412l.002-.004c.133-.179.214-.404.214-.648V4.2c0-.308-.127-.587-.332-.786a1.1 1.1 0 0 0-.787-.332h-.021h.001h-.02c-.308 0-.587.127-.786.332c-.205.2-.332.478-.332.787v.021v-.001v.118c.03.223.119.421.25.583l-.002-.002c.133.163.304.289.501.364l.008.003v6.569l-1.874-.996V7.865a.3.3 0 0 0-.048-.16l.001.001a1 1 0 0 0-.095-.119l-1.306-.998a.8.8 0 0 0 .07-.196l.001-.006q.023-.102.024-.222v-.024c0-.308-.127-.587-.332-.786a1.1 1.1 0 0 0-.786-.331H7.52h.001h-.02c-.308 0-.587.127-.786.332c-.205.2-.332.478-.332.787v.021v-.001v.024c0 .305.125.581.326.78c.2.205.478.332.787.332h.021h-.001h.015a.9.9 0 0 0 .288-.049l-.006.002c.11-.041.2-.081.287-.125l-.015.007l1.162.925v3.035a.3.3 0 0 0 .06.178l-.001-.001a.4.4 0 0 0 .152.129l.002.001l2.419 1.28V15.1l-4.055-1.874l.071-1.47v-.024a.3.3 0 0 0-.06-.178l.001.001a.4.4 0 0 0-.152-.129l-.002-.001l-1.851-.97a.5.5 0 0 0 .024-.157v-.2a1.13 1.13 0 0 0-.366-.719l-.001-.001a1.1 1.1 0 0 0-.752-.299h-.018h.001h-.007c-.305 0-.58.127-.775.332c-.208.2-.338.481-.338.792v.015v-.001v.118c.029.285.164.534.366.71l.001.001c.193.177.451.285.735.285h.131a1.5 1.5 0 0 0 .33-.083l-.01.003q.155-.06.275-.156l-.002.002l1.707.88l-.047 1.47v.008q0 .113.048.208l-.001-.003a.3.3 0 0 0 .164.142l.002.001l4.577 2.134v6.869q-.308 0-.605-.024l-.605-.047l.071-4.364a.35.35 0 0 0-.06-.191l.001.001a.36.36 0 0 0-.175-.142l-.002-.001l-2.87-1.328v-.125c0-.305-.127-.58-.332-.775a1.1 1.1 0 0 0-.787-.332H6.49h.001h-.114a1.08 1.08 0 0 0-.71.366l-.001.001a1.1 1.1 0 0 0-.285.746v.025v-.001v.007c0 .305.127.58.332.775c.195.205.47.332.775.332h.039q.236-.001.439-.094l-.007.003q.209-.1.369-.242l-.002.002l2.656 1.21v4.008a10.6 10.6 0 0 1-3.534-1.343l.048.027a10.9 10.9 0 0 1-2.773-2.354l-.014-.017a11.1 11.1 0 0 1-1.824-3.112l-.026-.076a10.3 10.3 0 0 1-.676-3.699v-.111c0-1.494.314-2.915.88-4.201l-.026.067a11.1 11.1 0 0 1 2.324-3.44A11 11 0 0 1 7.73 2.065l.071-.028a10.3 10.3 0 0 1 4.139-.856h.061h-.003h.064c1.494 0 2.915.314 4.201.88l-.067-.026a11.1 11.1 0 0 1 3.44 2.32a11 11 0 0 1 2.296 3.369l.028.071c.54 1.218.854 2.639.854 4.134v.067v-.003v.064c0 1.444-.292 2.82-.82 4.072l.026-.069a11.1 11.1 0 0 1-2.175 3.373l.005-.006a10.9 10.9 0 0 1-3.172 2.32l-.065.028c-1.16.568-2.516.932-3.948 1.009l-.026.001z"></path></svg>  <h1 class="hidden text-3xl md:block" data-svelte-h="svelte-cx7qyg">FamCoTree</h1></a> <div class="navbar-end svelte-m7otc3"><div class="dropdown svelte-m7otc3"> <button class="btn btn-circle btn-ghost"><div class="indicator svelte-m7otc3">${validate_component(Icon, "Icon").$$render($$result, { icon: "mdi:download" }, {}, {})}</div></button> <ul class="menu dropdown-content menu-sm z-[1] mt-3 rounded-box bg-base-100 p-2 shadow"><li><button data-svelte-h="svelte-hukw8a">SVG</button></li> <li><button data-svelte-h="svelte-14advwk">PNG</button></li> <hr> <li><button data-svelte-h="svelte-189ihk6">CSV</button></li> <li class="disabled" data-svelte-h="svelte-ud8x7g"><button class="btn-disabled">VCF</button></li></ul></div> <div class="dropdown flex justify-center svelte-m7otc3"><button class="btn btn-circle btn-ghost"><button class="indicator">${validate_component(Icon, "Icon").$$render($$result, { icon: "material-symbols:share" }, {}, {})}</button></button> <div class="menu dropdown-content menu-sm z-[1] mr-40 mt-16 w-max rounded-box bg-base-100 p-2 shadow svelte-m7otc3">${`${``}`}</div></div> <div class="drawer-content svelte-m7otc3"><label for="settings-drawer" class="btn btn-circle btn-ghost">${validate_component(Icon, "Icon").$$render($$result, { icon: "mdi:settings" }, {}, {})}</label></div></div></div> <div class="grow svelte-m7otc3"${add_attribute("this", FamCoTree, 0)}></div>  <div class="drawer z-50 svelte-m7otc3"><input id="node-drawer" type="checkbox" class="drawer-toggle"${add_attribute("checked", nodeDrawer, 1)}> <div class="drawer-side svelte-m7otc3"><label for="node-drawer" aria-label="close sidebar" class="drawer-overlay"></label> <aside class="menu w-80 bg-white p-4 text-base-content"> <h2 class="mb-4 text-center text-2xl font-bold" data-svelte-h="svelte-wbroqd">Contact Edit</h2>  <form class="form-control"><div class="avatar self-center svelte-m7otc3"><div class="w-fill mask mask-squircle svelte-m7otc3"><img${add_attribute("src", cForm.pic, 0)} alt="Contact"> <button class="absolute inset-0 flex cursor-pointer items-center justify-center bg-black bg-opacity-0 transition-all hover:bg-opacity-30" data-svelte-h="svelte-sav9jr"><svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 text-white opacity-0 transition-opacity hover:opacity-100" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 12h14M12 5l7 7-7 7"></path></svg></button></div></div> <div class="relative mt-4 svelte-m7otc3"><input type="text" id="dName" placeholder=" " class="peer input h-12 w-full rounded-lg border-2 border-gray-300 px-4 pb-2 pt-1 focus:border-primary focus:outline-none focus:ring-0"${add_attribute("value", cForm.name, 0)}> <label for="dName" class="absolute left-4 top-0 -translate-y-1/2 transform bg-white px-1 transition-all duration-200 peer-placeholder-shown:top-6 peer-placeholder-shown:text-base peer-placeholder-shown:text-gray-400 peer-focus:top-0 peer-focus:-translate-y-1/2 peer-focus:text-sm peer-focus:text-primary" data-svelte-h="svelte-177j1n2">Name</label></div> <div class="relative mt-4 svelte-m7otc3"><input type="text" id="dSurname" placeholder="" class="peer input h-12 w-full rounded-lg border-2 border-gray-300 px-4 pb-2 pt-1 focus:border-primary focus:outline-none focus:ring-0"${add_attribute("value", cForm.surname, 0)}> <label for="dSurname" class="absolute left-4 top-0 -translate-y-1/2 transform bg-white px-1 transition-all duration-200 peer-placeholder-shown:top-6 peer-placeholder-shown:text-base peer-placeholder-shown:text-gray-400 peer-focus:top-0 peer-focus:-translate-y-1/2 peer-focus:text-sm peer-focus:text-primary" data-svelte-h="svelte-qkpocy">Surname</label></div> <div class="collapse collapse-plus svelte-m7otc3"><input type="checkbox" ${""} class="peer"> <div class="collapse-title text-xs font-medium svelte-m7otc3">${escape("More names")}</div> <div class="collapse-content svelte-m7otc3">${``}</div></div> <div class="relative svelte-m7otc3"><input type="date" id="dBorn" placeholder="" class="peer input h-12 w-full rounded-lg border-2 border-gray-300 px-4 pb-2 pt-2 focus:border-primary focus:outline-none focus:ring-0"${add_attribute("value", cForm.Birthday, 0)}> <label for="dBorn" class="absolute left-4 top-0 -translate-y-1/2 transform bg-white px-1 transition-all duration-200 peer-placeholder-shown:top-6 peer-placeholder-shown:text-base peer-placeholder-shown:text-gray-400 peer-focus:top-0 peer-focus:-translate-y-1/2 peer-focus:text-sm peer-focus:text-primary" data-svelte-h="svelte-5b45g2">Birth date</label> ${``}</div> <div class="relative mt-4 svelte-m7otc3"><input type="date" id="dDied" placeholder="" class="peer input h-12 w-full rounded-lg border-2 border-gray-300 px-4 pb-2 pt-2 focus:border-primary focus:outline-none focus:ring-0"${add_attribute("value", cForm.died, 0)}> <label for="dDied" class="absolute left-4 top-0 -translate-y-1/2 transform bg-white px-1 transition-all duration-200 peer-placeholder-shown:top-6 peer-placeholder-shown:text-base peer-placeholder-shown:text-gray-400 peer-focus:top-0 peer-focus:-translate-y-1/2 peer-focus:text-sm peer-focus:text-primary" data-svelte-h="svelte-1ipwjt4">Death date</label> ${``}</div> <div class="collapse-title text-xs font-medium svelte-m7otc3">${escape("More dates")}</div> <div class="divider svelte-m7otc3" data-svelte-h="svelte-1h6ary9">Emails</div> <div class="divider svelte-m7otc3" data-svelte-h="svelte-18548t9">Phones</div> <div class="divider svelte-m7otc3" data-svelte-h="svelte-5lvpl8">Addresses</div> <div class="divider svelte-m7otc3" data-svelte-h="svelte-c1tt8h">Relations</div> <div class="divider svelte-m7otc3" data-svelte-h="svelte-jmjj90">Custom Fields</div> <div class="relative mt-4 svelte-m7otc3"><textarea type="text" id="dNotes" placeholder="Notes" class="peer input min-h-28 w-full rounded-lg border-2 border-gray-300 px-4 pb-2 pt-1 focus:border-primary focus:outline-none focus:ring-0">${escape("")}</textarea> <label for="dNotes" class="absolute left-4 top-0 -translate-y-1/2 transform bg-white px-1 transition-all duration-200 peer-placeholder-shown:top-6 peer-placeholder-shown:text-base peer-placeholder-shown:text-gray-400 peer-focus:top-0 peer-focus:-translate-y-1/2 peer-focus:text-sm peer-focus:text-primary" data-svelte-h="svelte-sblva2">Notes</label></div> <div class="relative mt-4 svelte-m7otc3"><input type="text" id="dUID" placeholder="" ${"disabled"} class="peer input h-12 w-full rounded-lg border-2 border-gray-300 px-4 pb-2 pt-1 text-center"${add_attribute("value", cForm.key, 0)}> <label for="dUID" class="absolute left-4 top-0 -translate-y-1/2 transform bg-gray-100 px-1 transition-all duration-200 peer-placeholder-shown:top-6 peer-placeholder-shown:text-base peer-placeholder-shown:text-gray-400 peer-focus:top-0 peer-focus:-translate-y-1/2 peer-focus:text-sm peer-focus:text-primary" data-svelte-h="svelte-1q0c09e">UID</label></div> <div class="relative mt-4 svelte-m7otc3"><input type="text" id="dPosition" placeholder="" disabled class="peer input h-12 w-full rounded-lg border-2 border-gray-300 px-4 pb-2 pt-1 text-center"${add_attribute("value", cForm.position, 0)}> <label for="dPosition" class="absolute left-4 top-0 -translate-y-1/2 transform bg-gray-100 px-1 transition-all duration-200 peer-placeholder-shown:top-6 peer-placeholder-shown:text-base peer-placeholder-shown:text-gray-400 peer-focus:top-0 peer-focus:-translate-y-1/2 peer-focus:text-sm peer-focus:text-primary" data-svelte-h="svelte-4iebfw">Position</label></div> <button class="btn btn-primary mt-4" data-svelte-h="svelte-pulnjy">Update</button></form></aside></div></div>  <div class="drawer drawer-end z-50 svelte-m7otc3"><input id="settings-drawer" type="checkbox" class="drawer-toggle"> <div class="drawer-side svelte-m7otc3"><label for="settings-drawer" aria-label="close sidebar" class="drawer-overlay"></label> <aside class="menu w-80 bg-white p-4 text-base-content"> <h2 class="mb-4 text-center text-2xl font-bold" data-svelte-h="svelte-lm5zoo">Settings</h2>  <div class="form-control svelte-m7otc3"><div class="form-control svelte-m7otc3"><label class="label cursor-pointer" data-svelte-h="svelte-sqrv6j"><span class="text-base">Dark mode</span> <label class="grid cursor-pointer place-items-center"><input type="checkbox" value="synthwave" class="theme-controller toggle col-span-2 col-start-1 row-start-1 bg-base-content"> <svg class="col-start-1 row-start-1 fill-base-100 stroke-base-100" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="5"></circle><path d="M12 1v2M12 21v2M4.2 4.2l1.4 1.4M18.4 18.4l1.4 1.4M1 12h2M21 12h2M4.2 19.8l1.4-1.4M18.4 5.6l1.4-1.4"></path></svg> <svg class="col-start-2 row-start-1 fill-base-100 stroke-base-100" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"></path></svg></label></label> <div class="divider svelte-m7otc3" data-svelte-h="svelte-qb0zw">Diagram style</div> <div class="mt-4 flex items-center justify-between svelte-m7otc3"><label class="cursor-pointer text-base" for="colorPicker" data-svelte-h="svelte-1gzj0xt">Diagram color</label> <input type="color" id="colorPicker" class="ml-2 h-8 w-8 cursor-pointer"${add_attribute("value", diagramColor, 0)}></div> <div class="relative mt-4 svelte-m7otc3"><select id="dContactStyle" class="peer select h-12 w-full rounded-lg border-2 border-gray-300 px-4 pb-2 pt-1 focus:border-primary focus:outline-none focus:ring-0" placeholder=" "><option selected value="Simple" data-svelte-h="svelte-1i750yp">Simple</option></select> <label for="dOption" class="absolute left-4 top-0 -translate-y-1/2 transform bg-white px-1 transition-all duration-200 peer-placeholder-shown:top-6 peer-placeholder-shown:text-base peer-placeholder-shown:text-gray-400 peer-focus:top-0 peer-focus:-translate-y-1/2 peer-focus:text-sm peer-focus:text-primary" data-svelte-h="svelte-1gsa8ss">Diagram contact style</label></div> <div class="relative mb-4 mt-4 svelte-m7otc3"><select id="dRelationStyle" class="peer select h-12 w-full rounded-lg border-2 border-gray-300 px-4 pb-2 pt-1 focus:border-primary focus:outline-none focus:ring-0" placeholder=" "><option selected${add_attribute("value", go.Link.Bezier, 0)} data-svelte-h="svelte-1fj5v6j">Free Hand</option><option${add_attribute("value", go.Link.JumpOver, 0)} data-svelte-h="svelte-1gbg3o">Boxy Jump</option><option${add_attribute("value", go.Link.JumpGap, 0)} data-svelte-h="svelte-1xkjg3g">Boxy Gap</option></select> <label for="dOption" class="absolute left-4 top-0 -translate-y-1/2 transform bg-white px-1 transition-all duration-200 peer-placeholder-shown:top-6 peer-placeholder-shown:text-base peer-placeholder-shown:text-gray-400 peer-focus:top-0 peer-focus:-translate-y-1/2 peer-focus:text-sm peer-focus:text-primary" data-svelte-h="svelte-1k8cd12">Diagram relation style</label></div> <div class="divider svelte-m7otc3" data-svelte-h="svelte-1hcev5v">Automation</div> <label class="label cursor-pointer"><span class="label-text" data-svelte-h="svelte-6r0ijz">Readonly UID</span> <input type="checkbox" class="toggle toggle-primary"${add_attribute("checked", lockUID, 1)}></label> <label class="label cursor-pointer"><span class="label-text" data-svelte-h="svelte-1qzbdmt">Auto update UID</span> <input type="checkbox" class="toggle toggle-primary"${add_attribute("checked", autoUpdateUID, 1)}></label> <label class="label cursor-pointer"><span class="label-text" data-svelte-h="svelte-euv4qt">Auto add reverse relation</span> <input type="checkbox" class="toggle toggle-primary"${add_attribute("checked", autoReverseRelation, 1)}></label> <div class="divider svelte-m7otc3" data-svelte-h="svelte-1ncle2z">Danger zone</div> <button class="btn btn-error mt-4 bg-red-300" data-svelte-h="svelte-19i96hb">Edit scheme</button> <button class="btn btn-error mt-4">Delete all ${escape(linkCount)} relations</button> <button class="btn btn-error mt-4">Delete all ${escape(nodeCount)} contacts</button></div></div></aside></div></div>  <dialog id="shceme_dialog" class="modal"${add_attribute("this", dialogVar, 0)}><div class="modal-box w-11/12 max-w-5xl svelte-m7otc3"><form method="dialog" data-svelte-h="svelte-128syxg"><button class="btn btn-circle btn-ghost btn-sm absolute right-2 top-2">✕</button></form> <h3 class="text-lg font-bold" data-svelte-h="svelte-s418cp">Scheme editor</h3> <p class="py-4" data-svelte-h="svelte-yp8jxc">Be carefull when updating scheme, use proper JSON syntax!</p> <textarea placeholder="JSON scheme" class="textarea textarea-bordered min-h-[300px] w-full resize">${escape("")}</textarea> <div class="modal-action svelte-m7otc3"><form method="dialog"> <button class="btn btn-primary" data-svelte-h="svelte-1tahnv2">Copy to clipboard</button> <button class="btn btn-error" data-svelte-h="svelte-jo3ypf">Update</button></form></div></div> <form method="dialog" class="modal-backdrop" data-svelte-h="svelte-5gpmjx"><button>close</button></form> </dialog>`;
});
export {
  Page as default
};
